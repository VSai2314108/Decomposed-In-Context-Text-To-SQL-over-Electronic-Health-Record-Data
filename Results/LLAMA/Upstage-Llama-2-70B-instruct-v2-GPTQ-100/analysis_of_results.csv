DATABASE,GOLD SQL,PREDICTED SQL,DECISION
poker_player,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality, count(*) FROM people GROUP BY Nationality",CORRECT
wta_1,"SELECT count(*) ,  hand FROM players GROUP BY hand","SELECT hand, count(*) FROM players GROUP BY hand",CORRECT
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = (SELECT MIN(age) FROM Dogs),WRONG
course_teach,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT T1.Hometown, COUNT(DISTINCT T2.Teacher_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Hometown",WRONG
world_1,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT T1.Name, count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE count(T2.Language) > 2 GROUP BY T1.Name",WRONG
pets_1,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)",WRONG
concert_singer,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name, Country, Age FROM singer ORDER BY Age",WRONG
world_1,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT count(*) FROM country WHERE GovernmentForm = 'Republic',CORRECT
poker_player,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made, Best_Finish, People_ID FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID",WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,CORRECT
orchestra,SELECT Name FROM conductor WHERE Nationality != 'USA',SELECT Name FROM conductor WHERE Nationality != 'USA',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT count(DISTINCT T1.FlightNo) FROM flights AS T1 WHERE T1.SourceAirport = 'Aberdeen' AND T1.DestAirport = 'Ashley',CORRECT
museum_visit,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010) AND Open_Year > 2010,WRONG
dog_kennels,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id, T1.last_name FROM Owners AS T1 WHERE T1.owner_id = (SELECT owner_id FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY owner_id ORDER BY SUM(cost_of_treatment) DESC LIMIT 1)",WRONG
tvshow,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT id FROM TV_Channel WHERE id NOT IN (SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones'),CORRECT
pets_1,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) , PetType FROM Pets GROUP BY PetType",CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' GROUP BY flights.Airline,WRONG
concert_singer,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT DISTINCT Country FROM singer WHERE Age > 40 AND Age < 30,WRONG
student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name, T1.middle_name, T1.last_name, T2.degree_program_id, T3.semester_id, T4.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Semesters AS T3 ON T2.semester_id = T3.semester_id JOIN Degree_Programs AS T4 ON T2.degree_program_id = T4.degree_program_id GROUP BY T1.student_id HAVING count(T2.student_id) = 2",WRONG
employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT shop.Manager_name, shop.District FROM shop INNER JOIN hiring ON hiring.Shop_ID = shop.Shop_ID GROUP BY shop.Manager_name, shop.District ORDER BY shop.Number_products DESC LIMIT 1;",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1;",WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT T1.Document_ID, T1.Document_Name, count(T2.Paragraph_ID) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID",CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO',CORRECT
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,CORRECT
wta_1,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches WHERE match_num > 10 GROUP BY tourney_name,WRONG
world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT DISTINCT CountryName FROM countries WHERE NOT EXISTS (SELECT * FROM car_makers WHERE car_makers.Country = countries.CountryId),CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,CORRECT
pets_1,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType",CORRECT
employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT s.Manager_name, s.District FROM shop s ORDER BY s.Number_products DESC LIMIT 1;",CORRECT
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT DISTINCT Template_ID FROM Templates WHERE Documents.Template_ID = Templates.Template_ID,WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents GROUP BY Document_ID,WRONG
singer,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,"SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)",CORRECT
tvshow,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT T1.Title, T1.Directed_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id ORDER BY T1.Original_air_date",CORRECT
student_transcripts_tracking,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id, T1.degree_summary_name, T1.degree_summary_description FROM Degree_Programs AS T1 WHERE T1.degree_program_id = (SELECT T2.degree_program_id FROM Student_Enrolment AS T2 GROUP BY T2.degree_program_id ORDER BY count(*) DESC LIMIT 1)",WRONG
real_estate_properties,SELECT count(*) FROM Other_Available_Features,SELECT count(*) FROM Other_Available_Features;,CORRECT
concert_singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT city, count(*) FROM employee GROUP BY city",CORRECT
car_1,select distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT Year FROM cars_data WHERE Weight < 400 OR Weight > 300,WRONG
singer,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",CORRECT
wta_1,SELECT count(*) FROM players,SELECT count(*) FROM players,CORRECT
car_1,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(Horsepower), T2.Maker FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T1.Cylinders = 3 GROUP BY T2.Maker",WRONG
wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(DISTINCT T2.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'left' AND T1.tourney_name = 'WTA Championships',WRONG
wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2013) AND player_id IN (SELECT winner_id FROM matches WHERE year = 2016)",WRONG
concert_singer,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age > 20,CORRECT
network_1,SELECT name FROM Highschooler WHERE grade  =  10,SELECT DISTINCT name FROM Highschooler WHERE grade = 10,CORRECT
singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 30000,WRONG
museum_visit,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008,CORRECT
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1",CORRECT
battle_death,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel' GROUP BY T1.name, T1.result, T1.bulgarian_commander",WRONG
wta_1,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1",CORRECT
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980,CORRECT
wta_1,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 JOIN matches AS T3 ON T1.player_id = T3.winner_id OR T1.player_id = T3.loser_id JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id",WRONG
pets_1,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT count(DISTINCT T1.PetID), T2.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T2.StuID",CORRECT
student_transcripts_tracking,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT department_name, department_id FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY count(*) DESC LIMIT 1)",CORRECT
course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'math',WRONG
poker_player,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT DISTINCT poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC,CORRECT
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date, T2.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T2.transcript_id HAVING count(T2.student_course_id) >= 2",CORRECT
orchestra,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company, count(*) FROM orchestra GROUP BY Record_Company",CORRECT
network_1,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""",SELECT DISTINCT grade FROM Highschooler WHERE name = 'Kyle',CORRECT
world_1,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm, Population FROM country WHERE LifeExpectancy > (SELECT avg(LifeExpectancy) FROM country) GROUP BY GovernmentForm",WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),WRONG
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height = (SELECT MAX(Height) FROM people),CORRECT
world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT Continent, avg(LifeExpectancy), sum(Population) FROM country WHERE avg(LifeExpectancy) < 72 GROUP BY Continent",WRONG
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG',CORRECT
dog_kennels,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments) GROUP BY Professionals.first_name, Professionals.last_name",WRONG
dog_kennels,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(DISTINCT T1.professional_id) FROM Treatments AS T1 GROUP BY T1.professional_id,WRONG
student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, T2.degree_program_id, T3.semester_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T3.semester_id = 2 GROUP BY T1.student_id HAVING count(T2.degree_program_id) = 2",WRONG
tvshow,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime',CORRECT
voter_1,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",CORRECT
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches GROUP BY winner_id,WRONG
course_teach,SELECT Name FROM teacher ORDER BY Age ASC,SELECT T1.Name FROM teacher AS T1 ORDER BY T1.Age ASC,CORRECT
cre_Doc_Template_Mgt,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT Templates.Template_ID, Version_Number, Template_Type_Code FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Templates.Template_ID, Version_Number, Template_Type_Code",WRONG
student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,SELECT last_name FROM students WHERE current_address_id = addresses.address_id AND state_province_county = 'North Carolina' AND NOT EXISTS (SELECT * FROM student_enrolment WHERE student_enrolment.student_id = students.student_id),WRONG
employee_hire_evaluation,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT Location, count(*) FROM shop GROUP BY Location",CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM cars_data WHERE Year = 1980,CORRECT
car_1,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT T1.Continent, count(DISTINCT T3.Id) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",CORRECT
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = (SELECT MIN(age) FROM Dogs),WRONG
world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English'),CORRECT
battle_death,"SELECT name ,  date FROM battle","SELECT battle.name, battle.date, battle.result FROM battle ORDER BY battle.date DESC",WRONG
real_estate_properties,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT T1.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon',WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(DISTINCT T1.Model) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company',CORRECT
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches GROUP BY winner_id,WRONG
student_transcripts_tracking,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name, T1.middle_name, T1.last_name FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.degree_program_id = 'Bachelors' GROUP BY T1.first_name, T1.middle_name, T1.last_name",WRONG
course_teach,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT T1.Name FROM teacher AS T1 WHERE NOT EXISTS (SELECT * FROM course_arrange AS T2 WHERE T1.Teacher_ID = T2.Teacher_ID),CORRECT
car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders",CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT Airline FROM flights WHERE SourceAirport = 'CVO' AND Airline NOT IN (SELECT Airline FROM flights WHERE DestAirport = 'APG'),CORRECT
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING count(*) > 3,WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","SELECT count(*) FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley' GROUP BY SourceAirport, DestAirport",WRONG
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT avg(Edispl) FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'volvo' GROUP BY model_list.Model,WRONG
battle_death,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'",CORRECT
car_1,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT T1.Id, T1.FullName, T2.Make FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.Make JOIN cars_data ON T2.MakeId = cars_data.Id WHERE cars_data.Horsepower < (SELECT min(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4 GROUP BY T1.Id, T1.FullName, T2.Make",WRONG
tvshow,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language, count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1;",CORRECT
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,"SELECT T1.Model, max(T2.MPG) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id GROUP BY T1.Model",WRONG
concert_singer,"select max(capacity), average from stadium","SELECT max(Capacity), avg(Capacity) FROM stadium",WRONG
student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',CORRECT
wta_1,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT players.country_code) FROM players,CORRECT
tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey',CORRECT
voter_1,SELECT max(created) FROM votes WHERE state  =  'CA',SELECT MAX(created) FROM VOTES WHERE state = 'CA',CORRECT
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments),CORRECT
