DATABASE,GOLD SQL,PREDICTED SQL,DECISION
wta_1,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT sum(ranking_points) ,  first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.first_name",CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code,WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT count(*) FROM cars_data WHERE Year  =  1980,CORRECT
student_transcripts_tracking,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs WHERE degree_program_id  =  (SELECT degree_program_id FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1) #### PostgreSQL SQL QUERY SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs WHERE degree_program_id  =  (SELECT degree_program_id FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1) #### PostgreSQL FIXED SQL QUERY SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs WHERE degree_program_id  =  (SELECT degree_program_id FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1) #### MySQL SQL QUERY SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs WHERE degree_program_id  =  (SELECT degree_program_id FROM D",WRONG
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT T1.Template_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID,CORRECT
car_1,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT count(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T2.Country HAVING count(*)  >  2,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM cars_data WHERE Horsepower  >  150,CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",SELECT DISTINCT T1.Airline FROM flights AS T1 WHERE T1.SourceAirport  =  'APG' AND T1.DestAirport  =  'CVO',CORRECT
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Aruba' GROUP BY T1.Language ORDER BY T1.Percentage DESC LIMIT 1,CORRECT
network_1,"SELECT name ,  grade FROM Highschooler","SELECT name ,  grade FROM Highschooler",CORRECT
cre_Doc_Template_Mgt,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT T1.Template_ID ,  count(T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID",CORRECT
network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT T1.ID ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id",CORRECT
pets_1,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.Major ,  T1.Age FROM Student AS T1 WHERE NOT EXISTS (SELECT * FROM Pets AS T2 WHERE T2.PetType  =  'cat' AND T1.PetID  =  T2.PetID)",WRONG
cre_Doc_Template_Mgt,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT DISTINCT T1.Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'BK',CORRECT
voter_1,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id ,  phone_number ,  state FROM VOTES",CORRECT
orchestra,SELECT count(DISTINCT Nationality) FROM conductor,SELECT COUNT (DISTINCT Nationality) FROM conductor,CORRECT
museum_visit,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT AVG (Age) FROM visitor WHERE Level_of_membership  <=  4,CORRECT
world_1,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'",CORRECT
dog_kennels,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT date_of_treatment ,  first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",CORRECT
car_1,SELECT count(*) FROM COUNTRIES;,SELECT count(DISTINCT CountryId) FROM countries #### MySQL SQL QUERY SELECT count(*) FROM countries #### MySQL FIXED SQL QUERY SELECT count(DISTINCT CountryId) FROM countries #### PostgreSQL SQL QUERY SELECT count(*) FROM countries #### PostgreSQL FIXED SQL QUERY SELECT count(DISTINCT CountryId) FROM countries,WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE SourceAirport  =  'Aberdeen' AND DestAirport  =  'Ashley',CORRECT
voter_1,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE",CORRECT
pets_1,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY PetType, weight ORDER BY pet_age ASC LIMIT 1",CORRECT
car_1,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  =  (SELECT min(Year) FROM cars_data) #### PostgreSQL SQL QUERY SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  =  (SELECT min(Year) FROM cars_data) #### PostgreSQL FIXED SQL QUERY SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  =  (SELECT min(Year) FROM cars_data) #### MySQL SQL QUERY SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  =  (SELECT min(Year) FROM cars_data) #### MySQL FIXED SQL QUERY SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.Id WHERE T2.Year  =  (SELECT min(Year) FROM cars_data) #### Oracle SQL QUERY SELECT T1.Make ,  T2.Year FROM car_names AS T1 JOIN cars_",WRONG
museum_visit,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT Name FROM museum WHERE Num_of_Staff  >  (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year  >  2010) AND Open_Year  >  2010,WRONG
network_1,SELECT count(*) FROM Highschooler,SELECT count(DISTINCT ID) FROM Highschooler,CORRECT
voter_1,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',SELECT COUNT (DISTINCT vote_id) FROM VOTES WHERE state  =  'NY' OR state  =  'CA',CORRECT
concert_singer,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_Name ,  T1.Theme ,  count(DISTINCT T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID",CORRECT
tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(Share) ,  min(Share) FROM TV_series",CORRECT
dog_kennels,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(DISTINCT T1.owner_id) FROM Owners AS T1 WHERE T1.owner_id NOT IN (SELECT DISTINCT T2.owner_id FROM Dogs AS T2),CORRECT
concert_singer,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(Capacity) ,  max(Capacity) FROM stadium",CORRECT
network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM highschooler WHERE EXISTS (SELECT * FROM friend WHERE friend.student_id  =  highschooler.ID),CORRECT
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,"SELECT DISTINCT T1.line_1 ,  T1.line_2 ,  T1.line_3 ,  T1.city ,  T1.zip_postcode ,  T1.state_province_county ,  T1.country ,  T1.other_address_details FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id JOIN Students AS T3 ON T1.address_id  =  T3.permanent_address_id",WRONG
concert_singer,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT T1.Name FROM stadium AS T1 WHERE NOT EXISTS (SELECT * FROM concert AS T2 WHERE T2.Stadium_ID  =  T1.Stadium_ID),CORRECT
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id,WRONG
course_teach,SELECT count(*) FROM teacher,SELECT count(DISTINCT teacher.Teacher_ID) FROM teacher #### PostgreSQL SQL QUERY SELECT count(*) FROM teacher #### PostgreSQL FIXED SQL QUERY SELECT count(DISTINCT teacher.Teacher_ID) FROM teacher,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT DISTINCT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  >=  3,CORRECT
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT count(*) FROM flights WHERE SourceAirport  =  'AHD Airport' AND Airline  =  'United Airlines',CORRECT
dog_kennels,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(DISTINCT Template_ID) FROM Templates #### PostgreSQL SQL QUERY SELECT count(*) FROM Templates #### PostgreSQL FIXED SQL QUERY SELECT count(DISTINCT Template_ID) FROM Templates,WRONG
orchestra,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 WHERE NOT EXISTS (SELECT * FROM performance AS T2 WHERE T2.Orchestra_ID  =  T1.Orchestra_ID),CORRECT
orchestra,SELECT avg(Attendance) FROM SHOW,SELECT AVG(Attendance) FROM show,CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(dog_id) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs),CORRECT
dog_kennels,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT T1.first_name ,  T1.last_name ,  T3.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Sizes AS T3 ON T2.size_code  =  T3.size_code",WRONG
flight_2,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL',CORRECT
student_transcripts_tracking,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(transcript_date) FROM Transcripts,CORRECT
real_estate_properties,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT T1.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  'AirCon',WRONG
dog_kennels,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT DISTINCT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT T2.professional_id FROM Treatments AS T2)",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""",SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base' #### PostgreSQL SQL QUERY SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base' #### PostgreSQL FIXED SQL QUERY SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base' #### Oracle SQL QUERY SELECT T1.Template_Type_Code FROM Templates T1 JOIN Documents T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base' #### Oracle FIXED SQL QUERY SELECT T1.Template_Type_Code FROM Templates T1 JOIN Documents T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base' #### MySQL SQL QUERY SELECT T1.Template_Type_Code FROM Templates T1 JOIN Documents T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  'Data base',WRONG
dog_kennels,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Template_ID ,  T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T2.Template_ID HAVING count(*)  =  (SELECT max(count(*)) FROM Documents GROUP BY Template_ID) #### PostgreSQL SQL QUERY SELECT T1.Template_ID ,  T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T2.Template_ID HAVING count(*)  =  (SELECT max(count(*)) FROM Documents GROUP BY Template_ID) #### PostgreSQL FIXED SQL QUERY SELECT T1.Template_ID ,  T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T2.Template_ID HAVING count(*)  =  (SELECT max(count(*)) FROM Documents GROUP BY Template_ID) #### Oracle SQL QUERY SELECT T1.Template_ID ,  T1.Template_Type_Code FROM Templates T1 JOIN Documents T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T2.Template_ID HAVING count(*)  =  (SELECT max(count(*)) FROM Documents GROUP BY Template_ID) #### Oracle FIXED SQL QUERY SELECT T1",WRONG
world_1,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",CORRECT
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Aruba',WRONG
singer,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT DISTINCT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID",CORRECT
network_1,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT count(student_id) FROM likes AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.ID WHERE T2.name  =  'Kyle',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(FlightNo) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen',CORRECT
employee_hire_evaluation,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) ,  max(Number_products) FROM shop",CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name HAVING count(*)  =  (SELECT max(count(*)) FROM orchestra AS T3 GROUP BY T3.Conductor_ID),WRONG
course_teach,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Name HAVING count(*)  >=  2,CORRECT
car_1,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT DISTINCT T1.Maker ,  T2.Model FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId ORDER BY T1.Maker",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportCode  =  'AHD',CORRECT
student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### PostgreSQL SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### PostgreSQL FIXED SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### Oracle SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### Oracle FIXED SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### MySQL SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### MySQL FIXED SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'Master') #### SQL Server SQL QUERY SELECT semester_id FROM Semesters WHERE semester_id IN (,WRONG
tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by ,  count(*) FROM Cartoon GROUP BY Directed_by",CORRECT
network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",CORRECT
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id  =  (SELECT min(T2.transcript_id) FROM Transcript_Contents AS T2) #### PostgreSQL SQL QUERY SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id  =  (SELECT min(T2.transcript_id) FROM Transcript_Contents AS T2) #### PostgreSQL FIXED SQL QUERY SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id  =  (SELECT min(T2.transcript_id) FROM Transcript_Contents AS T2) #### Oracle SQL QUERY SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts T1 WHERE T1.transcript_id  =  (SELECT min(T2.transcript_id) FROM Transcript_Contents T2) #### Oracle FIXED SQL QUERY SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts T1 WHERE T1.transcript_id  =  (SELECT min(T2.transcript_id) FROM Transcript_Contents T2) #### MySQL SQL QUERY SELECT T1.transcript_id ,  T1.transcript_date FROM Transcripts T1 WHERE T",WRONG
flight_2,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Country FROM airlines WHERE Airline  =  'JetBlue Airways',CORRECT
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  =  (SELECT min(Earnings) FROM poker_player),CORRECT
pets_1,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'dog' AND NOT EXISTS (SELECT * FROM pets AS T4 WHERE T4.PetType  =  'cat' AND T4.PetID  =  T3.PetID),WRONG
orchestra,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company ,  COUNT (DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company #### PostgreSQL SQL QUERY SELECT Record_Company ,  COUNT (DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company #### PostgreSQL FIXED SQL QUERY SELECT Record_Company ,  COUNT (DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT Airline FROM flights WHERE SourceAirport  =  'CVO' EXCEPT SELECT Airline FROM flights WHERE SourceAirport  =  'APG',CORRECT
wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"SELECT first_name ,  last_name FROM players JOIN matches ON winner_id  =  player_id WHERE year  =  2013 INTERSECT SELECT first_name ,  last_name FROM players JOIN matches ON winner_id  =  player_id WHERE year  =  2016",WRONG
pets_1,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname ,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T2.StuID HAVING count(*)  >  1",CORRECT
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  =  (SELECT min(Earnings) FROM poker_player),CORRECT
singer,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1,CORRECT
employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city","SELECT City ,  COUNT(*) FROM employee GROUP BY City",CORRECT
tvshow,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT DISTINCT series_name ,  Content FROM TV_Channel",WRONG
world_1,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT SUM(Population) ,  avg(SurfaceArea) FROM country WHERE Region  =  'North America' AND SurfaceArea  >  3000",WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT T1.CountryName FROM countries AS T1 WHERE NOT EXISTS (SELECT * FROM car_makers AS T2 WHERE T2.Country  =  T1.CountryId),CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT Airline FROM flights WHERE SourceAirport  =  'AHD',CORRECT
flight_2,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT DISTINCT Airline, Abbreviation FROM airlines WHERE uid IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA') OR DestAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA'))",WRONG
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT avg(Edispl) FROM cars_data WHERE Make  =  'volvo',WRONG
tvshow,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option ,  series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T1.High_definition_TV  =  1",WRONG
museum_visit,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",CORRECT
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1,CORRECT
world_1,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US'",WRONG
course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT T1.Name ,  T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name",WRONG
car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM car_names WHERE Model IN (SELECT Model FROM car_names WHERE Weight  <  (SELECT avg(Weight) FROM cars_data)),WRONG
singer,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",CORRECT
dog_kennels,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ,  T1.last_name ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1",WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(FlightNo) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  'Aberdeen',CORRECT
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 #### PostgreSQL SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 #### PostgreSQL FIXED SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 #### Oracle SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC FETCH FIRST 1 ROWS ONLY #### Oracle FIXED SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC FETCH FIRST 1 ROWS ONLY #### MySQL SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 #### MySQL FIXED SQL QUERY SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 #### SQL Server SQL QUERY SELECT TOP 1 first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC #### SQL Server FIXED SQL QUERY SELECT TOP 1 first_name ,  middle_name ,  last_name",WRONG
car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT max(Accelerate) FROM cars_data WHERE Cylinders IN (SELECT DISTINCT Cylinders FROM cars_data GROUP BY Cylinders),WRONG
dog_kennels,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type ,  charge_amount FROM Charges",CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(Document_ID) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code  =  T3.Template_Type_Code WHERE T2.Template_Type_Code  =  'PPT',CORRECT
cre_Doc_Template_Mgt,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY' #### MySQL SQL QUERY SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY' #### MySQL FIXED SQL QUERY SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY' #### PostgreSQL SQL QUERY SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY' #### PostgreSQL FIXED SQL QUERY SELECT Paragraph_ID ,  Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'",WRONG
flight_2,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,CORRECT
world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",SELECT DISTINCT Region FROM country WHERE Language  =  'Dutch' OR Language  =  'English',WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT DISTINCT T1.Airline FROM flights AS T1 WHERE T1.SourceAirport  =  'AHD',CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code",CORRECT
employee_hire_evaluation,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Name HAVING count(*)  =  (SELECT max(count(*)) FROM hiring GROUP BY Shop_ID),WRONG
