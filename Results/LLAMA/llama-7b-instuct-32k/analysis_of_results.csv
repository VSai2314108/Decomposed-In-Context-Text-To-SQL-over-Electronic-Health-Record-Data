DATABASE,GOLD SQL,PREDICTED SQL,DECISION
concert_singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
concert_singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
concert_singer,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name, Country, Age, Age FROM singer ORDER BY Age DESC",WRONG
concert_singer,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT Name,Country,Age FROM singer ORDER BY Age DESC",CORRECT
concert_singer,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(Age) ,  min(Age) ,  max(Age) FROM singer WHERE Country =  'France'",CORRECT
concert_singer,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(Age) ,  min(Age) ,  max(Age) FROM singer WHERE Country = ""France""",CORRECT
concert_singer,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT name ,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1",WRONG
concert_singer,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT name ,  Song_Name ,  Song_release_year FROM singer WHERE Age  =  (SELECT min(Age) FROM singer)",WRONG
concert_singer,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT Country FROM singer WHERE Age  >  20,CORRECT
concert_singer,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT Country FROM singer WHERE Age  >  20 GROUP BY Country ORDER BY count(*) DESC LIMIT 3,WRONG
concert_singer,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country, Count(*) FROM singer GROUP BY Country",CORRECT
concert_singer,"SELECT country ,  count(*) FROM singer GROUP BY country",SELECT COUNT (DISTINCT Country) FROM singer,WRONG
concert_singer,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age  >  (SELECT avg(Age) FROM singer),CORRECT
concert_singer,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Age  >  (SELECT avg(Age) FROM singer) AND T2.concert_ID = (SELECT concert_ID FROM concert WHERE Year > (SELECT avg(Year) FROM concert)),WRONG
concert_singer,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location, Name, Capacity FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",CORRECT
concert_singer,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location ,  Name ,  Capacity FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",CORRECT
concert_singer,"select max(capacity), average from stadium","SELECT max(Capacity) ,  avg(Capacity) FROM stadium",WRONG
concert_singer,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(Capacity) ,  max(Capacity) FROM stadium",CORRECT
concert_singer,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT Name,Capacity,Average,Average FROM stadium ORDER BY Average DESC LIMIT 1",WRONG
concert_singer,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT Name,Capacity,Average,Average FROM stadium ORDER BY Average DESC LIMIT 1",WRONG
concert_singer,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT (DISTINCT concert_ID) FROM concert WHERE Year  =  2014 OR Year  =  2015,CORRECT
concert_singer,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT COUNT (DISTINCT concert_ID) FROM concert WHERE Year  =  2014 OR Year  =  2015,CORRECT
concert_singer,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT Name ,  count(*) FROM stadium GROUP BY Name",WRONG
concert_singer,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",SELECT Capacity FROM stadium WHERE stadium.Stadium_ID = (SELECT concert.Stadium_ID FROM concert WHERE concert.concert_ID = (SELECT concert_ID FROM singer_in_concert WHERE singer_in_concert.Singer_ID = (SELECT Singer_ID FROM singer WHERE singer.Country = 'United States' AND singer.Name = 'BeyoncÃ©'))),WRONG
concert_singer,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT Name,Capacity FROM stadium WHERE YEAR  >=  2014 OR YEAR  =  NULL GROUP BY Name,Capacity ORDER BY COUNT(*) DESC",WRONG
concert_singer,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT Name,Capacity FROM stadium WHERE Stadium_ID IN (SELECT concert_ID FROM concert WHERE concert_Name LIKE '%2013%')",WRONG
concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1,CORRECT
concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1,CORRECT
concert_singer,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT Name FROM stadium WHERE Concert IS NULL,WRONG
concert_singer,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT concert_ID FROM concert),WRONG
concert_singer,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT Country FROM singer WHERE Age > 40 OR Age < 30,WRONG
concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,"SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert,concert_in_stadium,concert_ID,concert_Year WHERE concert_Year = 2014)",WRONG
concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT Name FROM stadium WHERE Year != 2014,WRONG
concert_singer,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT concert_Name, Theme, COUNT(DISTINCT singer_ID) AS singer_count FROM concert JOIN singer_in_concert ON concert_ID = concert_ID GROUP BY concert_ID;",WRONG
concert_singer,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT concert.concert_Name, concert.Theme, singer.Name, singer.Country, singer.Song_Name, singer.Song_release_year, singer.Age, singer.Is_male FROM singer JOIN concert ON singer.Singer_ID = concert.Singer_ID JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID",WRONG
concert_singer,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT Name, COUNT(*) FROM singer_in_concert GROUP BY Name",WRONG
concert_singer,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT Name, COUNT(DISTINCT concert_ID) as num_concerts FROM singer_in_concert GROUP BY Name",WRONG
concert_singer,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT name FROM singer WHERE YEAR  =  2014 AND concert_ID IN (SELECT concert_ID FROM concert WHERE Year = 2014),WRONG
concert_singer,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT name FROM singer WHERE YEAR  =  2014 AND concert_ID  =  (SELECT concert_ID FROM singer_in_concert WHERE YEAR  =  2014),WRONG
concert_singer,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT Name ,  Country ,  Song_Name ,  Song_release_year ,  Age ,  Is_male FROM singer WHERE Song_Name LIKE '%Hey%' AND singer.Country = 'Nation'",WRONG
concert_singer,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT T1.Name,T1.Country,T1.Song_Name,T1.Song_release_year,T1.Age,T1.Is_male FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.concert_ID  =  (SELECT T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Location = 'Hey')",WRONG
concert_singer,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT stadium.Name,stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year  =  '2014' AND concert.Year  =  '2015' AND concert.Stadium_ID = stadium.Stadium_ID",WRONG
concert_singer,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT      stadium.Name,     stadium.Location FROM     stadium JOIN     singer_in_concert ON singer_in_concert.Stadium_ID = stadium.Stadium_ID JOIN     concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE     concert.Year = 2014 OR concert.Year = 2015 GROUP BY     stadium.Name,stadium.Location HAVING     COUNT(*) > 1",WRONG
concert_singer,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE stadium_ID  =  (SELECT max(stadium_ID) FROM stadium),WRONG
concert_singer,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE stadium_ID  =  (SELECT max(stadium_ID) FROM stadium),WRONG
pets_1,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM Pets WHERE weight  >  10 AND StuID = 1,WRONG
pets_1,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM Pets WHERE weight  >  10,CORRECT
pets_1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets WHERE age  =  (SELECT min(age) FROM Pets),WRONG
pets_1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT min(weight) FROM Pets WHERE age = (SELECT min(age) FROM Pets),WRONG
pets_1,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) ,  PetType FROM Pets GROUP BY PetType ORDER BY max(weight) DESC",CORRECT
pets_1,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT max(weight) ,  max(type) FROM Pets",WRONG
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM Pets WHERE PetID IN (SELECT StuID FROM Student WHERE Age > 20),CORRECT
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM Has_Pet WHERE PetID > 20 AND StuID = Student.StuID AND Age > 20,WRONG
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM Has_Pet WHERE Sex  =  'F' AND PetType  =  'Dog' GROUP BY PetID,WRONG
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',SELECT count(*) FROM Student WHERE Fname LIKE '%female%' AND PetType LIKE '%dog%' AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID = 0),WRONG
pets_1,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT PetType) FROM Pets,CORRECT
pets_1,SELECT count(DISTINCT pettype) FROM pets,SELECT count(*) FROM Pets,CORRECT
pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT Fname FROM Student WHERE Has_Pet.PetID = Pets.PetType AND Pets.PetType = 'cat' OR Pets.PetType = 'dog',WRONG
pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',SELECT Fname FROM Student WHERE Has_Pet.StuID = Student.StuID AND Has_Pet.PetID = 1 AND Has_Pet.PetType = 'cat' OR Has_Pet.PetType = 'dog',WRONG
pets_1,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType = 'cat' AND T3.PetType = 'dog',CORRECT
pets_1,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType = 'cat' AND T3.PetType = 'dog',CORRECT
pets_1,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT Major,Age FROM Student WHERE StuID NOT IN (SELECT StuID from Student WHERE Has_Pet.PetID = Pets.PetID AND Has_Pet.PetID = 1)",WRONG
pets_1,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT Major FROM Student WHERE Major NOT IN (SELECT Major FROM Student WHERE StuID = Student.StuID AND PetID = Pets.PetID),WRONG
pets_1,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE Has_Pet.PetID IS NULL,WRONG
pets_1,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student WHERE Has_Pet.PetID IS NULL,WRONG
pets_1,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT T1.Fname,T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetID = 1 AND T2.PetType = 1",WRONG
pets_1,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",SELECT first_name FROM Student WHERE Has_Pet.PetID = Pets.PetID AND Has_Pet.StuID = Student.StuID AND Has_Pet.PetID NOT IN (SELECT PetID FROM Pets WHERE PetType = 'cat'),WRONG
pets_1,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType,weight FROM Pets ORDER BY Age ASC LIMIT 1",WRONG
pets_1,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, pet_age, PetID, weight FROM Pets ORDER BY pet_age ASC LIMIT 1",WRONG
pets_1,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT StuID,PetID,weight FROM Has_Pet WHERE StuID = (SELECT StuID FROM Student WHERE Age > 1) AND PetID = (SELECT PetID FROM Pets WHERE Age > 1)",WRONG
pets_1,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT StuID,PetID,PetType,pet_age,weight FROM Has_Pet WHERE StuID = (SELECT StuID FROM Student WHERE Age > 1) AND PetID = (SELECT PetID FROM Pets WHERE Age > 1)",WRONG
pets_1,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) ,  max(pet_age) FROM Pets GROUP BY PetType",WRONG
pets_1,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) ,  max(pet_age) FROM Pets GROUP BY PetType",WRONG
pets_1,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",SELECT avg(weight) FROM Pets GROUP BY PetType,WRONG
pets_1,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",SELECT avg(weight) FROM Pets GROUP BY PetType,WRONG
pets_1,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT Fname,Age FROM Student WHERE Has_Pet.StuID = Student.StuID AND Has_Pet.PetID = Pets.PetID",WRONG
pets_1,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT LName ,  FName ,  Age ,  Sex ,  Major ,  Advisor ,  city_code FROM Student WHERE Has_Pet = 1 AND EXISTS (SELECT 1 FROM Pets WHERE StuID = Student.StuID AND PetID = Student.StuID)",WRONG
pets_1,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT PetID FROM Pets WHERE StuID = (SELECT StuID FROM Student WHERE LName = 'Smith'),WRONG
pets_1,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT T1.PetID from Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID  =  T2.PetID WHERE T2.StuID  =  'Smith' AND T2.StuID = T1.StuID,WRONG
pets_1,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT count(*) ,  PetID FROM Has_Pet WHERE StuID  =  (SELECT StuID FROM Student WHERE Major  =  'Computer Science') GROUP BY PetID",WRONG
pets_1,"select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",SELECT PetID FROM Pets WHERE StuID IN (SELECT StuID FROM Student),WRONG
pets_1,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.Fname,T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetID > 1 AND T2.StuID = T1.StuID",WRONG
pets_1,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.LName,T1.Fname,T1.Age,T1.Sex,T1.Major,T1.Advisor,T1.city_code FROM Student AS T1 JOIN Pets AS T2 ON T1.ID  =  T2.StuID",WRONG
pets_1,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Pets WHERE PetType = 'cat' AND Age = 3),WRONG
pets_1,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""cat"" AND pet_age = 3 AND weight = 3))",WRONG
pets_1,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM Student WHERE Has_Pet.StuID = Student.StuID AND Has_Pet.PetID = 0 AND Has_Pet.StuID NOT IN (SELECT StuID FROM Pets),WRONG
pets_1,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(Age) FROM Student WHERE Has_Pet.StuID = 0,WRONG
car_1,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,CORRECT
car_1,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,CORRECT
car_1,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContinentId,Continent,count(*) FROM countries GROUP BY Continent",WRONG
car_1,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT ContId,ContName,count(*) FROM continents",WRONG
car_1,SELECT count(*) FROM COUNTRIES;,SELECT COUNT(*) FROM countries,CORRECT
car_1,SELECT count(*) FROM COUNTRIES;,SELECT COUNT(*) FROM countries,CORRECT
car_1,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT FullName,Id,count(*) FROM car_makers GROUP BY Id ORDER BY count(*) DESC LIMIT 10",WRONG
car_1,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT FullName,Id,MPG FROM car_makers",WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM cars_data ORDER BY Horsepower ASC LIMIT 1,WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM cars_data ORDER BY Horsepower ASC LIMIT 1,WRONG
car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT Make FROM car_names WHERE Weight  <  (SELECT avg(Weight) FROM cars_data),WRONG
car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT      model FROM     cars_data WHERE     weight < AVG(weight) GROUP BY     model HAVING     COUNT(*) < 1,WRONG
car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.MakeId  =  T2.MakeId WHERE T2.Year  =  1970 AND T2.Maker  =  T1.Id,WRONG
car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT FullName FROM car_makers WHERE Id = (SELECT MakeId FROM cars_data WHERE Year = 1970) AND Country = (SELECT CountryId FROM countries WHERE Continent = 'Europe'),WRONG
car_1,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Make, Production_Time, Year FROM cars_data WHERE Year = (SELECT MIN(Year) FROM cars_data) ORDER BY Production_Time ASC LIMIT 1",WRONG
car_1,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","SELECT Maker,Year FROM car_makers JOIN cars_data ON Maker = cars_data.Maker WHERE Year = (SELECT min(Year) FROM car_makers)",WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT DISTINCT Model FROM cars_data WHERE Year  >  1980,WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,SELECT Model FROM model_list WHERE Year  >  1980 AND Maker  =  car_makers.Id AND Make  =  car_names.MakeId AND Model  =  model_list.ModelId,WRONG
car_1,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT Continent, COUNT (DISTINCT CountryId) FROM countries GROUP BY Continent",WRONG
car_1,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT ContId,Continent,count(*) as num_makers FROM continents LEFT JOIN car_makers ON continents.ContId = car_makers.ContId GROUP BY ContId",WRONG
car_1,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT CountryName FROM countries GROUP BY CountryName ORDER BY count(*) DESC LIMIT 1,WRONG
car_1,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,SELECT CountryName FROM countries GROUP BY CountryName ORDER BY count(*) DESC LIMIT 1,WRONG
car_1,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;","SELECT count(*) ,  FullName FROM cars_data JOIN car_makers ON cars_data.MakeId = car_makers.MakeId",WRONG
car_1,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","SELECT Id,Maker,FullName FROM car_makers",WRONG
car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,SELECT Accelerate FROM cars_data WHERE MakeId = 'amc hornet sportabout (sw)' AND Model = 'sw',WRONG
car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,"SELECT max(Accelerate) ,  avg(Accelerate) FROM cars_data GROUP BY MakeId HAVING max(Accelerate) = 'amc hornet sportabout (sw)'",WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT COUNT(*) FROM car_makers WHERE Country = 'France' AND Id NOT IN (SELECT DISTINCT car_makers.Id FROM model_list),WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,SELECT count(*) FROM car_makers WHERE Country = 'France' AND Maker IS NOT NULL,WRONG
car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT COUNT(*) FROM cars_data WHERE Country = 'USA' AND (Accelerate > 0 OR Horsepower > 0 OR Weight > 0),WRONG
car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,SELECT count(*) FROM cars_data WHERE Country  =  'United States' AND Maker  =  'Ford',WRONG
car_1,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(mpg) FROM cars_data WHERE Cylinders = 4 AND Country = 'United States',WRONG
car_1,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4 AND Country = 'United States',WRONG
car_1,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,"SELECT min(Weight) ,  avg(Weight) ,  Year FROM cars_data GROUP BY Cylinders HAVING count(*)  >  8 AND Year  =  1974",WRONG
car_1,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND Year  =  1974 AND Continent  =  1,WRONG
car_1,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker,Model FROM car_makers",WRONG
car_1,"SELECT Maker ,  Model FROM MODEL_LIST;","SELECT Maker,Model FROM car_makers,car_names",WRONG
car_1,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT      countries.Continent,     COUNT(DISTINCT car_makers.Id) AS Count FROM     countries     LEFT JOIN car_makers ON countries.Continent = car_makers.Country     LEFT JOIN model_list ON car_makers.Id = model_list.Maker     LEFT JOIN car_names ON model_list.Model = car_names.Make     LEFT JOIN cars_data ON car_names.Make = cars_data.Id GROUP BY     countries.Continent",WRONG
car_1,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","SELECT CountryName,CountryId FROM countries WHERE Id IN (SELECT Id FROM car_makers)",WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT Id FROM cars_data WHERE Horsepower  >  150 AND Country = 'United States',WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,SELECT count(*) FROM cars_data WHERE Horsepower  >  150 AND Country = 'United States',WRONG
car_1,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",SELECT avg(Weight) FROM cars_data GROUP BY Year,WRONG
car_1,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT avg(Weight) ,  avg(Year) FROM cars_data GROUP BY Year",CORRECT
car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,"SELECT      countries.Continent, COUNT(DISTINCT car_makers.Id) AS Count FROM     continents JOIN     countries ON continents.ContId = countries.ContId JOIN     car_makers ON countries.CountryId = car_makers.Country JOIN     model_list ON car_makers.Id = model_list.Maker JOIN     car_names ON model_list.Model = car_names.Make JOIN     cars_data ON car_names.MakeId = cars_data.Id GROUP BY     countries.Continent HAVING     COUNT(DISTINCT car_makers.Id) >= 3",WRONG
car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,"SELECT name FROM countries WHERE @.@ in (SELECT name FROM countries AS T1 JOIN continents AS T2 ON T1.ContId  =  T2.ContId WHERE T2.ContName  =  ""European"" AND T1.CountryName  >=  ""3"")",WRONG
car_1,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(Horsepower) ,  Make FROM cars_data GROUP BY Cylinders,Edispl,Country",WRONG
car_1,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(Horsepower) ,  MakeId FROM cars_data WHERE Cylinders  =  3 AND Country  =  'United States'",WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,SELECT Model FROM model_list ORDER BY MPG DESC LIMIT 1,WRONG
car_1,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,SELECT MPG FROM cars_data ORDER BY MPG DESC LIMIT 1,WRONG
car_1,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980,CORRECT
car_1,select avg(horsepower) from cars_data where year  <  1980;,SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980,CORRECT
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT avg(Edispl) FROM cars_data WHERE Maker  =  'Volvo' AND Model  =  'Volvo',WRONG
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,SELECT avg(Edispl) FROM cars_data WHERE Make = 'Volvo',WRONG
car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT max(Accelerate) FROM cars_data GROUP BY Cylinders,WRONG
car_1,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",SELECT max(Accelerate) FROM cars_data WHERE Cylinders = (SELECT max(Cylinders) FROM cars_data),WRONG
car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,SELECT make FROM cars_data GROUP BY make ORDER BY count(*) DESC LIMIT 1,WRONG
car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model,Maker,Id FROM model_list GROUP BY Model,Maker ORDER BY count(*) DESC LIMIT 1",WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM cars_data WHERE Cylinders  >  4,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,SELECT count(*) FROM cars_data WHERE Cylinders  >  4,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT COUNT (DISTINCT Id) FROM cars_data WHERE Year = 1980,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,SELECT COUNT (DISTINCT Id) FROM cars_data WHERE YEAR  =  1980,CORRECT
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM cars_data WHERE car_makers.FullName = 'American Motor Company' AND car_makers.Country = 'United States',WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT count(*) FROM model_list WHERE maker  =  'American Motor Company' AND country  =  'United States',WRONG
car_1,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FullName ,  T1.Id FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.ModelCount  > 3 GROUP BY T1.Id HAVING COUNT(DISTINCT T2.Model) > 3",WRONG
car_1,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.FullName, T1.Id FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Models > 3",WRONG
car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,"SELECT DISTINCT Model FROM car_makers WHERE Maker = ""General Motors"" AND Weight > 3500",WRONG
car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,"SELECT      car_makers.Id,     car_makers.Maker,     car_makers.FullName,     car_makers.Country,     COUNT(DISTINCT cars_data.Id) AS num_cars,     COUNT(DISTINCT cars_data.Id) OVER (PARTITION BY car_makers.Id) AS num_cars_per_maker,     COUNT(DISTINCT cars_data.Id) OVER (PARTITION BY car_makers.Id, car_makers.Country) AS num_cars_per_maker_and_country,     COUNT(DISTINCT cars_data.Id) OVER (PARTITION BY car_makers.Id, car_makers.Country, car_makers.FullName) AS num_cars_per_maker_and_country_and_full_name,     COUNT(DISTINCT cars_data.Id) OVER (PARTITION BY car_makers.Id, car_makers.Country, car_makers.FullName, car_makers.Year) AS num_cars_per_maker_and_country_and_full_name_and_year,     COUNT(DISTINCT cars_data.Id) OVER (PARTITION BY car_makers.Id, car_makers.Country, car_makers.FullName, car_makers.Year, car_makers.Accelerate) AS num_cars_per_maker_and_country_and_full_name_",WRONG
car_1,select distinct year from cars_data where weight between 3000 and 4000;,"SELECT      cars_data.Id,     cars_data.Year,     cars_data.Weight,     cars_data.Accelerate,     COUNT(DISTINCT cars_data.Id) AS Total FROM     cars_data     LEFT JOIN model_list ON cars_data.Id = model_list.ModelId     LEFT JOIN car_names ON model_list.Model = car_names.Model     LEFT JOIN car_makers ON car_makers.Id = model_list.MakerId     LEFT JOIN countries ON car_makers.Country = countries.CountryId WHERE     cars_data.Weight BETWEEN 3000 AND 4000 GROUP BY     cars_data.Year,cars_data.Weight,cars_data.Accelerate ORDER BY     cars_data.Year,cars_data.Weight,cars_data.Accelerate",WRONG
car_1,select distinct year from cars_data where weight between 3000 and 4000;,SELECT Year FROM cars_data WHERE Weight < 4000 AND Year > 2000,WRONG
car_1,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1,CORRECT
car_1,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1,CORRECT
car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"SELECT min(Accelerate) FROM cars_data WHERE Make = ""Volvo""",WRONG
car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT min(Accelerate) FROM cars_data WHERE Make  =  'Volvo' AND Cylinders  =  (SELECT min(Cylinders) FROM model_list WHERE Maker  =  'Volvo'),WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT max(Accelerate) FROM cars_data) AND Horsepower > (SELECT max(Horsepower) FROM cars_data) AND Accelerate > (SELECT max(Accelerate) FROM cars_data) AND Horsepower > (SELECT max(Horsepower) FROM cars_data),WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,"SELECT count(*) FROM (SELECT cars_data.Id,cars_data.Accelerate,cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate > cars_data.Horsepower) AS temp",WRONG
car_1,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT COUNT (DISTINCT CountryId) FROM countries WHERE COUNT (DISTINCT Maker) > 2;,WRONG
car_1,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT count(*) FROM car_makers,WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT COUNT (DISTINCT Id) FROM cars_data WHERE Cylinders  >  6,CORRECT
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,SELECT count(*) FROM cars_data WHERE Cylinders  >  6,CORRECT
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,"SELECT Id,Horsepower FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1",WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,"SELECT ModelId,Maker,Model FROM model_list WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1",WRONG
car_1,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","SELECT T1.MakeId,T1.Make FROM cars_data  WHERE T1.Cylinders < 3 AND T1.Horsepower < (SELECT T2.Horsepower FROM cars_data T2 JOIN model_list T1 ON T1.MakeId  =  T2.MakeId WHERE T2.Cylinders > 3)",WRONG
car_1,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","SELECT T1.MakeId,T1.Model FROM car_names AS T1 JOIN cars_data ON T1.MakeId = T2.MakeId WHERE T2.Horsepower < T2.MinHorsepower AND T2.Cylinders < 4 AND T2.Id NOT IN (SELECT T1.MakeId FROM car_names AS T1 JOIN model_list ON T1.MakeId = T2.MakeId WHERE T2.Maker = T1.Maker AND T2.Model = T1.Model)",WRONG
car_1,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,"SELECT max(MPG) ,  avg(MPG) ,  Cylinders ,  Year FROM cars_data GROUP BY Cylinders HAVING Year  <= 1980",WRONG
car_1,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,"SELECT max(MPG) ,  avg(MPG) ,  Year FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980 GROUP BY Cylinders,Year",WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,SELECT T1.ModelId FROM model_list AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId WHERE T2.Id  < 3500 AND T2.Maker  !=  'Ford Motor Company' AND T2.Maker  !=  'Ford Motor Company',WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,"SELECT Model FROM cars_data WHERE MPG  < 3500 AND Maker != ""Ford""",WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT CountryId FROM car_makers),WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT CountryId FROM car_makers),WRONG
car_1,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;","SELECT Id,Maker FROM car_makers WHERE Id IN (SELECT Id FROM car_names WHERE MakeId IN (SELECT Id FROM model_list WHERE ModelId IN (SELECT Id FROM cars_data WHERE MPG > 20 AND Cylinders > 4 AND Edispl > 200 AND Horsepower > 150 AND Weight > 3000 AND Accelerate > 0.0 AND Year > 2000)) GROUP BY Id HAVING COUNT(*) > 3)",WRONG
car_1,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;","SELECT T1.Id,T1.Maker FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  > 2 AND T2.Make  > 3 AND T1.Id NOT IN (SELECT T2.MakeId FROM car_names AS T2 WHERE T2.Model  = 2 AND T2.Make  = 3)",WRONG
car_1,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';","SELECT T1.CountryId,T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.ContId  =  T2.ContId AND T2.Model  =  'fiat' OR T1.ContId  =  T2.ContId AND T2.Id  > 3 GROUP BY T1.CountryId",WRONG
car_1,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';","SELECT T1.CountryId,T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.Continent  =  T2.ContId AND T1.Country  =  T2.CountryId WHERE T2.Maker  =  ""Fiat"" AND T2.Id IN (SELECT T1.Id FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.MakeId WHERE T2.Model  =  ""Fiat"")",WRONG
flight_2,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""","SELECT Country FROM flights WHERE Airline = ""JetBlue Airways"" AND DestAirport = airports.AirportCode",WRONG
flight_2,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Airline FROM flights WHERE DestAirport = airports.AirportCode AND SourceAirport = airports.AirportCode AND Airline = 'Jetblue Airways' AND Country = airports.CountryAbbrev,WRONG
flight_2,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM Airline WHERE UID = 'JetBlue Airways',WRONG
flight_2,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",SELECT Abbreviation FROM Airline WHERE UID = 'Jetblue Airways',WRONG
flight_2,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT Airline ,  Abbreviation ,  Country ,  CountryAbbrev FROM airlines WHERE Country  =  'USA'",WRONG
flight_2,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  ""USA""","SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'USA';",CORRECT
flight_2,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode,AirportName FROM airports WHERE DestAirport = 'Anthony'",WRONG
flight_2,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""","SELECT AirportCode,AirportName FROM airports WHERE City  =  'Anthony'",CORRECT
flight_2,SELECT count(*) FROM AIRLINES,SELECT COUNT (DISTINCT uid) FROM flights,WRONG
flight_2,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM flights,WRONG
flight_2,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,CORRECT
flight_2,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,CORRECT
flight_2,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM flights,CORRECT
flight_2,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM flights,CORRECT
flight_2,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",SELECT uid FROM airlines WHERE Abbreviation = 'UAL',WRONG
flight_2,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",SELECT Abbreviation FROM airlines WHERE UID = 'UAL',WRONG
flight_2,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",SELECT count(*) FROM flights WHERE Airline  =  'USA',WRONG
flight_2,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",SELECT count(*) FROM flights WHERE DestAirport  =  'USA',WRONG
flight_2,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT AirportName,Country,FlightNo FROM flights WHERE AirportName = 'Alton' AND DestAirport = 'United States'",WRONG
flight_2,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","SELECT AirportName,Country,DestAirport FROM flights WHERE DestAirport = 'Alton' AND SourceAirport = 'Alton'",WRONG
flight_2,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO',CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",SELECT AirportName FROM flights WHERE DestAirports.AirportCode = 'AKO',WRONG
flight_2,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City  =  'Aberdeen' AND AirportCode = 'ABZ',CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE AirportName LIKE '%Aberdeen%',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT count(*) FROM flights WHERE SourceAirport  =  'APG' AND DestAirport  =  airports.AirportCode,WRONG
flight_2,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT COUNT (DISTINCT SourceAirport) FROM flights WHERE DestAirport = 'APG' AND SourceAirport = 'APG',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",SELECT COUNT (DISTINCT DestAirport) FROM flights WHERE DestAirport = 'ATO',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",SELECT COUNT(*) FROM flights WHERE DestAirports = 'ATO',WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE DestAirport = airports.AirportCode AND SourceAirport = airports.AirportCode AND airports.AirportName = 'Aberdeen',WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE DestAirport = airports.AirportCode AND SourceAirport = airports.AirportCode AND airports.City = 'Aberdeen',WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen' AND SourceAirport = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen' AND SourceAirport = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE SourceAirport  =  'Aberdeen' AND DestAirport  =  'Ashley',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",SELECT count(*) FROM flights WHERE SourceAirport  =  'Aberdeen' AND DestAirport  =  'Ashley',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT count(*) FROM flights WHERE Airline = 'JetBlue Airways' AND DestAirport = airports.AirportCode,WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT count(*) FROM flights WHERE Airline  =  'Jetblue Airways',WRONG
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""",SELECT count(*) FROM flights WHERE Airline  =  'United Airlines' AND DestAirport  =  'ASY',CORRECT
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""",SELECT count(*) FROM flights WHERE DestAirport = 'ASY' AND Airline = 'United Airlines',CORRECT
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT count(*) FROM flights WHERE DestAirport = airports.AirportCode AND SourceAirport = airports.AirportCode AND DestAirport = 'AHD' AND SourceAirport = 'AHD',WRONG
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""",SELECT count(*) FROM flights WHERE Airline  =  'United' AND DestAirport  =  'AHD',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",SELECT count(*) FROM flights WHERE Airline = 'United' AND DestAirport = 'Aberdeen' AND SourceAirport = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",SELECT COUNT (DISTINCT Airline) FROM flights WHERE DestAirport = 'Aberdeen' AND Airline = 'United',CORRECT
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT City FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT City FROM flights GROUP BY City ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT AirportCode FROM flights GROUP BY DestAirports ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT AirportCode FROM flights GROUP BY DestAirports ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport ORDER BY T2.FlightNo DESC LIMIT 1,CORRECT
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT AirportCode FROM airports ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation,  Country FROM airlines ORDER BY count(*) DESC LIMIT 1",WRONG
flight_2,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation,Country FROM airlines ORDER BY FlightNo DESC LIMIT 1",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT Airline FROM flights WHERE DestAirport = 'AHD' AND SourceAirport = 'AHD',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",SELECT uid FROM flights WHERE DestAirports = 'AHD',WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT Airline FROM flights WHERE DestAirport = 'AHD' AND SourceAirport = 'AHD',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",SELECT uid FROM flights WHERE DestAirports = 'AHD',WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.uid WHERE T2.DestAirport  =  'APG' AND T2.SourceAirport  =  'CVO' AND T2.Airline  =  T1.uid,WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",SELECT airlines.uid FROM flights JOIN airlines ON airlines.uid = flights.Airline WHERE airports.City = 'APG' AND airports.AirportCode = 'CVO' AND airlines.uid IN (SELECT airlines.uid FROM flights JOIN airlines ON airlines.uid = flights.Airline WHERE airports.City = 'APG' AND airports.AirportCode = 'CVO'),WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'CVO' AND NOT DestAirport = 'APG',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","SELECT      airlines.uid,     airlines.Airline,     airlines.Abbreviation,     airlines.Country,     airports.AirportCode,     airports.AirportName,     airports.Country,     airports.CountryAbbrev FROM     airlines     JOIN airports ON airlines.Airline = airports.Airline WHERE     airports.AirportCode = 'CVO' GROUP BY     airlines.uid,     airlines.Airline,     airlines.Abbreviation,     airlines.Country HAVING     COUNT(DISTINCT airports.AirportCode) > 1",WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT * FROM airlines WHERE count(*)  >  10,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,SELECT DISTINCT uid FROM flights WHERE count(*)  >  10,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,"SELECT airlines.Airline ,  flights.FlightNo FROM flights LEFT JOIN airlines ON flights.Airline = airlines.uid WHERE flights.FlightNo < 200 AND airlines.FlightNo < 200",WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,SELECT airline FROM flights WHERE FlightNo  <  200 AND airline NOT IN (SELECT airline FROM flights WHERE FlightNo  >  200),WRONG
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE DestAirport = airports.AirportCode AND SourceAirport = airports.AirportCode AND Airline = 'United Airlines',WRONG
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",SELECT FlightNo FROM flights WHERE Airline = 'United Airlines' AND DestAirport = airports.AirportCode,WRONG
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE SourceAirport = 'APG' AND DestAirport = 'APG',CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE SourceAirport = 'APG',CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG' AND SourceAirport = 'APG',CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG' AND SourceAirport = 'APG',CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",SELECT FlightNo FROM flights WHERE AirportName = 'Aberdeen' AND DestAirport = airports.AirportCode,WRONG
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT FlightNo FROM flights WHERE DestAirport = ""Aberdeen""",CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT FlightNo FROM flights WHERE DestAirport = ""Aberdeen""",CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","SELECT FlightNo FROM flights WHERE DestAirport = ""Aberdeen""",CORRECT
flight_2,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen' OR DestAirport  =  'Abilene',CORRECT
flight_2,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",SELECT count(*) FROM flights WHERE DestAirport  =  'Aberdeen' OR DestAirport  =  'Abilene' AND SourceAirport  =  'Aberdeen' OR SourceAirport  =  'Abilene',CORRECT
flight_2,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportName FROM airports WHERE FlightNo = 0,WRONG
flight_2,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),"SELECT DestAirport,SourceAirport FROM flights WHERE DestAirport IS NULL OR SourceAirport IS NULL",WRONG
employee_hire_evaluation,SELECT count(*) FROM employee,SELECT count(*) FROM employee,CORRECT
employee_hire_evaluation,SELECT count(*) FROM employee,SELECT COUNT (DISTINCT Employee_ID) FROM employee,CORRECT
employee_hire_evaluation,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age DESC,WRONG
employee_hire_evaluation,SELECT name FROM employee ORDER BY age,"SELECT Name ,  Age FROM employee ORDER BY Age DESC",WRONG
employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city",SELECT count(*) FROM employee,WRONG
employee_hire_evaluation,"SELECT count(*) ,  city FROM employee GROUP BY city",SELECT count(*) FROM employee,WRONG
employee_hire_evaluation,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT city.name FROM city WHERE city.Population > 0 AND city.Population < 30 AND EXISTS (SELECT 1 FROM employee WHERE employee.age < 30 AND employee.city = city.name);,WRONG
employee_hire_evaluation,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,SELECT city.Name FROM city WHERE city.Name IN (SELECT city.Name FROM employee WHERE employee.Age < 30 GROUP BY city.Name HAVING count(*) > 1),WRONG
employee_hire_evaluation,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","SELECT count(*) ,  location FROM shop GROUP BY location",CORRECT
employee_hire_evaluation,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",SELECT count(*) FROM shop GROUP BY location,WRONG
employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT T1.Manager_name, T1.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID ORDER BY T2.Employee_ID DESC LIMIT 1",WRONG
employee_hire_evaluation,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT T2.Manager_name, T2.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID ORDER BY T2.Number_products DESC LIMIT 1",WRONG
employee_hire_evaluation,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) ,  max(Number_products) FROM shop",CORRECT
employee_hire_evaluation,"SELECT min(Number_products) ,  max(Number_products) FROM shop","SELECT min(Number_products) ,  max(Number_products) FROM shop",CORRECT
employee_hire_evaluation,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT Name, Location, District FROM shop ORDER BY Number_products DESC",CORRECT
employee_hire_evaluation,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","SELECT shop.Name, shop.Location, shop.District, shop.Number_products FROM shop ORDER BY shop.Number_products DESC",WRONG
employee_hire_evaluation,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop),CORRECT
employee_hire_evaluation,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),"SELECT Shop_ID,Name FROM shop WHERE Number_products > (SELECT avg(Number_products) from shop)",WRONG
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT name FROM employee ORDER BY Year_awarded DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT name FROM employee ORDER BY Bonus DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT DISTINCT Name FROM employee EXCEPT SELECT Name FROM evaluation WHERE Bonus  !=  NULL,WRONG
employee_hire_evaluation,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T2.Year_awarded is null,WRONG
employee_hire_evaluation,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT Name FROM shop ORDER BY Count(*) DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT Name FROM shop GROUP BY Name ORDER BY count(*) DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE hiring.Shop_ID IS NULL,WRONG
employee_hire_evaluation,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT name FROM shop WHERE Shop_ID IS NULL,WRONG
employee_hire_evaluation,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT Shop_ID, COUNT(Employee_ID) AS num_employees_hired FROM hiring GROUP BY Shop_ID",WRONG
employee_hire_evaluation,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","SELECT Number_products ,  Name FROM shop",WRONG
employee_hire_evaluation,SELECT sum(bonus) FROM evaluation,SELECT sum(Bonus) FROM evaluation,CORRECT
employee_hire_evaluation,SELECT sum(bonus) FROM evaluation,SELECT sum(Bonus) FROM evaluation,CORRECT
employee_hire_evaluation,SELECT * FROM hiring,SELECT * FROM hiring,CORRECT
employee_hire_evaluation,SELECT * FROM hiring,SELECT * FROM hiring,CORRECT
employee_hire_evaluation,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,SELECT      shop.District FROM     shop     JOIN     hiring ON shop.Shop_ID = hiring.Shop_ID     JOIN     evaluation ON hiring.Employee_ID = evaluation.Employee_ID     GROUP BY     shop.District HAVING     COUNT(DISTINCT evaluation.Employee_ID) > 1 AND COUNT(DISTINCT hiring.Employee_ID) > 1,WRONG
employee_hire_evaluation,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,"SELECT      shop.Name,     district.Name FROM     shop     JOIN     hiring ON shop.Shop_ID = hiring.Shop_ID     JOIN     evaluation ON hiring.Employee_ID = evaluation.Employee_ID     JOIN     district ON evaluation.District_ID = district.District_ID WHERE     shop.Number_products < 3000     AND     shop.Is_full_time = 1     AND     district.District_ID IN (SELECT district_ID FROM shop WHERE Number_products > 10000) GROUP BY     shop.Name,district.Name",WRONG
employee_hire_evaluation,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(*) FROM shop,CORRECT
employee_hire_evaluation,SELECT count(DISTINCT LOCATION) FROM shop,SELECT count(DISTINCT Shop_ID) FROM shop,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID,Document_Name,Document_Description FROM Documents",CORRECT
cre_Doc_Template_Mgt,"SELECT document_id ,  document_name ,  document_description FROM Documents","SELECT Document_ID,Document_Name,Document_Description FROM Documents",CORRECT
cre_Doc_Template_Mgt,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT Document_Name,Template_ID FROM Documents WHERE Document_Description LIKE '%w%' AND Document_ID = (SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%w%')",WRONG
cre_Doc_Template_Mgt,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT T1.Document_Name,T1.Document_ID,T2.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Description LIKE '%w%'",WRONG
cre_Doc_Template_Mgt,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT Document_ID,Template_ID,Document_Description,Other_Details FROM Documents WHERE Document_Name = 'Robbin CV' AND Document_ID = 1",WRONG
cre_Doc_Template_Mgt,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""","SELECT Documents.Document_ID,Templates.Template_ID,Documents.Document_Name,Documents.Document_Description,Other_Details FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV'",WRONG
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM Documents WHERE Document_ID IN (SELECT Document_ID FROM Templates WHERE Template_Type_Code = 'PPT'),WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',SELECT count(*) FROM Documents WHERE Template_Type_Code = 'PPT' AND Documents.Document_ID IN (SELECT Document_ID FROM Paragraphs WHERE Paragraph_ID IN (SELECT Paragraph_ID FROM Documents WHERE Template_Type_Code = 'PPT')),WRONG
cre_Doc_Template_Mgt,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT Template_ID,Document_ID,count(*) FROM Documents GROUP BY Template_ID",WRONG
cre_Doc_Template_Mgt,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","SELECT Template_ID, count(*) as num_uses FROM Paragraphs GROUP BY Template_ID",WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT Template_ID,Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT Template_ID,Template_Type_Code FROM Templates GROUP BY Template_ID ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT Template_ID FROM Templates WHERE Document_ID IN (SELECT Document_ID FROM Paragraphs) GROUP BY Template_ID HAVING COUNT(*) > 1,WRONG
cre_Doc_Template_Mgt,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,SELECT Template_ID FROM Templates WHERE Document_ID IN (SELECT Document_ID FROM Paragraphs) AND Template_ID IN (SELECT Template_ID FROM Templates),WRONG
cre_Doc_Template_Mgt,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT 0 FROM Templates AS T1 JOIN Paragraphs AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_ID  = 0 AND T1.Template_ID NOT IN (SELECT Document_ID FROM Documents),WRONG
cre_Doc_Template_Mgt,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT Template_ID FROM Templates WHERE NOT EXISTS (SELECT Template_ID FROM Paragraphs WHERE Document_ID = Template_ID),WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,CORRECT
cre_Doc_Template_Mgt,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT Template_ID,Version_Number,Template_Type_Code FROM Templates",CORRECT
cre_Doc_Template_Mgt,"SELECT template_id ,  version_number ,  template_type_code FROM Templates","SELECT Template_ID,Version_Number,Template_Type_Code FROM Templates",CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IS NOT NULL,WRONG
cre_Doc_Template_Mgt,SELECT DISTINCT template_type_code FROM Templates,SELECT * FROM Ref_Template_Types,WRONG
cre_Doc_Template_Mgt,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""",SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PP' OR Template_Type_Code  =  'PPT',CORRECT
cre_Doc_Template_Mgt,"SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",CORRECT
cre_Doc_Template_Mgt,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV',CORRECT
cre_Doc_Template_Mgt,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV',CORRECT
cre_Doc_Template_Mgt,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT Version_Number,Template_Type_Code FROM Templates WHERE Version_Number > 5 AND Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Template Type Code')",WRONG
cre_Doc_Template_Mgt,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID > 5",WRONG
cre_Doc_Template_Mgt,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code,Number_of_Templates FROM Ref_Template_Types",WRONG
cre_Doc_Template_Mgt,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code,Template_Type_Description FROM Ref_Template_Types GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Ref_Template_Types GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Ref_Template_Types ORDER BY count(*) DESC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code  <  3 AND Template_Type_Code IS NOT NULL,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*)  <  3,CORRECT
cre_Doc_Template_Mgt,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) ,  Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1",CORRECT
cre_Doc_Template_Mgt,"SELECT min(Version_Number) ,  template_type_code FROM Templates","SELECT min(Version_Number) ,  Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""","SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Document_Name  =  ""Data base"" AND T2.Document_ID = 1",WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  ""Data base""",SELECT Template_Type_Code FROM Ref_Template_Types WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Data base'),WRONG
cre_Doc_Template_Mgt,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT Document_Name FROM Documents WHERE Template_Type_Code = 'BK',WRONG
cre_Doc_Template_Mgt,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",SELECT Document_Name FROM Documents WHERE Ref_Template_Types.Template_Type_Code = 'BK' AND Documents.Document_ID = Paragraphs.Document_ID,WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Ref_Template_Types.Template_Type_Code,count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code",WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","SELECT Ref_Template_Types.Template_Type_Code,count(Document_ID) FROM Templates GROUP BY Ref_Template_Types.Template_Type_Code",WRONG
cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY count(*) DESC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Ref_Template_Types GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Document_ID IS NULL,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID),WRONG
cre_Doc_Template_Mgt,"SELECT template_type_code ,  template_type_description FROM Ref_template_types",SELECT * FROM Ref_Template_Types,CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code ,  template_type_description FROM Ref_template_types","SELECT Template_Type_Code,Template_Type_Description FROM Ref_Template_Types",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""","SELECT T2.Template_Type_Description FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T1.Template_Type_Code  =  ""AD"" AND T2.Template_Type_Code  =  ""AD""",WRONG
cre_Doc_Template_Mgt,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""",SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD',CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book',CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book',CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types WHERE Template_ID IN (SELECT Template_ID FROM Templates),WRONG
cre_Doc_Template_Mgt,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,SELECT Template_Details FROM Templates WHERE Document_ID IN (SELECT Document_ID FROM Documents),WRONG
cre_Doc_Template_Mgt,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'Presentation',WRONG
cre_Doc_Template_Mgt,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",SELECT Document_ID FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'Presentation'),WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT count(*) FROM Paragraphs WHERE Document_ID = 'Summer Show' AND Document_Name = 'Summer Show',WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show'),CORRECT
cre_Doc_Template_Mgt,select other_details from paragraphs where paragraph_text like 'korea',SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%' AND Document_ID = (SELECT Document_ID FROM Documents WHERE Template_ID = (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'Korea'));,WRONG
cre_Doc_Template_Mgt,select other_details from paragraphs where paragraph_text like 'korea',"SELECT Document_ID,Document_Name,Document_Description,Other_Details FROM Documents WHERE Paragraph_Text LIKE '%Korea%' AND Document_ID = (SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%');",WRONG
cre_Doc_Template_Mgt,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Document_Name = 'Welcome to NY'",WRONG
cre_Doc_Template_Mgt,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Document_ID = 1 AND Document_Name = 'Welcome to NY'",WRONG
cre_Doc_Template_Mgt,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID JOIN Ref_Template_Types ON Documents.Template_ID = Ref_Template_Types.Template_ID JOIN Templates ON Ref_Template_Types.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Customer reviews' AND Templates.Document_ID = 1,WRONG
cre_Doc_Template_Mgt,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",SELECT Paragraph_Text FROM Paragraphs WHERE Document_Name = 'Customer reviews' AND Document_ID = (SELECT Document_ID FROM Documents WHERE Template_ID = (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'Customer reviews'));,WRONG
cre_Doc_Template_Mgt,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID, count(*) as num_paragraphs FROM Documents GROUP BY Document_ID ORDER BY Document_ID",WRONG
cre_Doc_Template_Mgt,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID,Paragraph_ID,count(*) as num_paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID ORDER BY num_paragraphs DESC",WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID,Documents.Document_Name,count(*) as num_paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID,Documents.Document_Name,count(*) as num_paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Documents WHERE Paragraph_ID IN (SELECT Paragraph_ID FROM Paragraphs WHERE Paragraph_Text NOT IN (SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = 1) AND Paragraph_ID NOT IN (SELECT Paragraph_ID FROM Paragraphs WHERE Document_ID = 1)),WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,SELECT Document_ID FROM Documents WHERE Paragraph_ID IN (SELECT Paragraph_ID FROM Paragraphs WHERE Paragraph_ID > 1),WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID,Document_Name,sum(Paragraph_Text) FROM Documents GROUP BY Document_ID ORDER BY sum(Paragraph_Text) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Documents.Document_ID,Documents.Document_Name,count(*) FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Documents ORDER BY count(*) DESC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Documents ORDER BY count(*) ASC LIMIT 1,WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents WHERE Paragraph_Text LIKE '%1%' OR Paragraph_Text LIKE '%2%',WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents WHERE Paragraph_ID IN (SELECT Paragraph_ID FROM Paragraphs WHERE Paragraph_ID IN (SELECT Paragraph_ID FROM Paragraphs)),WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',"SELECT Document_ID FROM Documents WHERE Paragraph_Text LIKE '%Brazil%' AND Paragraph_Text LIKE '%Ireland%'""",WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',SELECT Document_ID FROM Documents WHERE Paragraph_Text LIKE '%Brazil%' AND Paragraph_Text LIKE '%Ireland%',WRONG
course_teach,SELECT count(*) FROM teacher,SELECT COUNT (DISTINCT ID) FROM teacher,WRONG
course_teach,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,CORRECT
course_teach,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name ORDER BY Age,WRONG
course_teach,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name ORDER BY Age ASC,WRONG
course_teach,"SELECT Age ,  Hometown FROM teacher","SELECT Age,Hometown FROM teacher WHERE Teacher_ID = (SELECT Teacher_ID FROM course_arrange WHERE Course_ID = (SELECT Course_ID FROM course WHERE Staring_Date = (SELECT Staring_Date FROM course WHERE Course_ID = (SELECT Course_ID FROM course WHERE Course = 'Python'))));",WRONG
course_teach,"SELECT Age ,  Hometown FROM teacher","SELECT Age,Hometown FROM teacher WHERE Teacher_ID = ANY (SELECT Teacher_ID FROM course_arrange WHERE Course_ID = ANY (SELECT Course_ID FROM course));",WRONG
course_teach,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM prereq WHERE Hometown = ""Little Lever Urban District""))",WRONG
course_teach,"select name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID = (SELECT T1.Course_ID FROM course AS T1 WHERE T1.Hometown = ""Little Lever Urban District""))",WRONG
course_teach,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age BETWEEN 32 AND 33,CORRECT
course_teach,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,SELECT Name FROM teacher WHERE Age  =  (SELECT Age FROM teacher  WHERE Age  =  32 OR Age  =  33),WRONG
course_teach,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age LIMIT 1,CORRECT
course_teach,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Name FROM teacher ORDER BY Age ASC LIMIT 1 WHERE Age = (SELECT MIN(Age) FROM teacher),WRONG
course_teach,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown ,  count(*) FROM teacher GROUP BY Hometown",CORRECT
course_teach,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",SELECT count(*) FROM teacher WHERE Hometown  =  'Hometown1',WRONG
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 5,WRONG
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1,CORRECT
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT      hometown FROM     teacher GROUP BY     hometown HAVING     COUNT(*) > 1,CORRECT
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,SELECT T1.Town FROM Teacher AS T1 JOIN Teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Town  =  'Town1' OR T2.Town  =  'Town2' OR T2.Town  =  'Town3' AND T1.Town  =  'Town1' OR T1.Town  =  'Town2' OR T1.Town  =  'Town3',WRONG
course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT T1.name, T2.title FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id = T2.teacher_id",WRONG
course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","SELECT Name ,  Course FROM teacher JOIN course ON teacher.ID = course.Teacher_ID",WRONG
course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT Name ,  Course_ID FROM teacher ORDER BY Name ASC",WRONG
course_teach,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","SELECT Name ,  Course FROM teacher ORDER BY Name",WRONG
course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT Name FROM teacher WHERE Course = 'math' AND Teacher_ID = Course_ID,WRONG
course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",SELECT Name FROM teacher WHERE Course_ID IN (SELECT Course_ID FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM course WHERE Dept_Name = 'Math')),WRONG
course_teach,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT Name , count(*) FROM teacher GROUP BY Name ORDER BY count(*) DESC LIMIT 10",WRONG
course_teach,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","SELECT T1.name,count(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID",WRONG
course_teach,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT Name FROM teacher WHERE EXISTS (SELECT 1 FROM course_arrange WHERE Teacher_ID = Teacher_ID),WRONG
course_teach,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,SELECT DISTINCT T1.name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING count(*)  =  2,WRONG
course_teach,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT name FROM teacher WHERE NOT EXISTS (SELECT 1 FROM course_arrange WHERE course_arrange.Teacher_ID = teacher.Teacher_ID),CORRECT
course_teach,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Course_ID is null,WRONG
museum_visit,SELECT count(*) FROM visitor WHERE age  <  30,SELECT COUNT (DISTINCT Age) FROM visitor WHERE Age  <  30 AND Museum_ID = 1,WRONG
museum_visit,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,CORRECT
museum_visit,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4,CORRECT
museum_visit,"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","SELECT T1.Name,T1.Level_of_membership FROM visitor AS T1 WHERE T1.Level_of_membership > 4 ORDER BY T1.Age DESC LIMIT 10",CORRECT
museum_visit,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT T1.Museum_ID,T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID  =  T2.Museum_ID GROUP BY T2.Museum_ID ORDER BY count(*) DESC LIMIT 1",WRONG
museum_visit,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < 2009,CORRECT
museum_visit,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","SELECT Open_Year,Num_of_Staff FROM museum WHERE Name = 'Plaza Museum' AND Museum_ID = (SELECT Museum_ID FROM visitor WHERE Name = 'Plaza Museum');",WRONG
museum_visit,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010),CORRECT
museum_visit,"SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID IN (SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID  =  T2.Museum_ID GROUP BY T2.Museum_ID HAVING count(*) > 1)",WRONG
museum_visit,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID JOIN museum ON visit.Museum_ID = museum.Museum_ID GROUP BY visitor.ID ORDER BY sum (Total_spent) DESC LIMIT 1;",WRONG
museum_visit,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT Museum_ID, Name FROM museum ORDER BY Total_spent DESC LIMIT 1",WRONG
museum_visit,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT Name FROM museum WHERE Num_of_Ticket = 0 AND Num_of_Staff = 0,WRONG
museum_visit,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT Name ,  Age FROM visitor ORDER BY Num_of_Ticket DESC LIMIT 1",WRONG
museum_visit,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","SELECT avg(Num_of_Ticket) ,  max(Num_of_Ticket) FROM visit WHERE Museum_ID = (SELECT Museum_ID FROM museum WHERE Name = (SELECT Name FROM visitor WHERE Level_of_membership = 1 AND Age = 25));",WRONG
museum_visit,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,SELECT Total_spent FROM visit WHERE visitor_ID IN (SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Level_of_membership  =  1),WRONG
museum_visit,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,SELECT      visitor.Name FROM     visitor JOIN     visit ON visit.visitor_ID = visitor.ID JOIN     museum ON visit.Museum_ID = museum.Museum_ID WHERE     museum.Open_Year < 2009 AND museum.Open_Year > 2011 GROUP BY     visitor.Name HAVING     COUNT(*) > 1,WRONG
museum_visit,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),SELECT count(*) FROM visit WHERE Museum_ID > 2010 AND Num_of_Ticket = 0,WRONG
museum_visit,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,"SELECT      museum.Museum_ID,     museum.Name,     COUNT(DISTINCT visit.visitor_ID) AS Num_of_Visitors,     SUM(visit.Total_spent) AS Total_spent FROM     museum     JOIN visit ON museum.Museum_ID = visit.Museum_ID     JOIN visitor ON visit.visitor_ID = visitor.ID WHERE     YEAR(visit.Open_Year) > 2013 AND YEAR(visit.Open_Year) < 2008 GROUP BY     museum.Museum_ID",WRONG
wta_1,SELECT count(*) FROM players,SELECT count(*) FROM players,CORRECT
wta_1,SELECT count(*) FROM players,SELECT count(*) FROM players,CORRECT
wta_1,SELECT count(*) FROM matches,SELECT count(*) FROM matches,CORRECT
wta_1,SELECT count(*) FROM matches,SELECT count(*) FROM matches,CORRECT
wta_1,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",CORRECT
wta_1,"SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'","SELECT first_name ,  last_name ,  hand ,  birth_date FROM players WHERE country_code  =  'USA'",WRONG
wta_1,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) ,  avg(winner_age) FROM matches",CORRECT
wta_1,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","SELECT avg(loser_age) ,  avg(winner_age) FROM matches",CORRECT
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(ranking) FROM rankings WHERE winner_id = (SELECT winner_id FROM matches),WRONG
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(ranking) FROM rankings WHERE winner_id = (SELECT winner_id FROM matches),WRONG
wta_1,SELECT min(loser_rank) FROM matches,SELECT max(loser_rank) FROM matches,WRONG
wta_1,SELECT min(loser_rank) FROM matches,"SELECT T1.best_of, T1.draw_size, T1.loser_age, T1.loser_entry, T1.loser_hand, T1.loser_ht, T1.loser_id, T1.loser_ioc, T1.loser_name, T1.loser_rank, T1.loser_rank_points, T1.loser_seed, T1.match_num, T1.",WRONG
wta_1,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM rankings,WRONG
wta_1,SELECT count(DISTINCT country_code) FROM players,SELECT count(DISTINCT country_code) FROM players,CORRECT
wta_1,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,CORRECT
wta_1,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(*) FROM matches,CORRECT
wta_1,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tourney_name FROM matches WHERE match_num > 10 AND tourney_id = (SELECT tourney_id FROM rankings WHERE ranking_date > '2022-01-01'),WRONG
wta_1,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,SELECT tournament_id FROM tournament WHERE match_num  >  10 AND match_num  <  10,WRONG
wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT T1.name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.year  =  '2013' AND T2.year  =  '2016' AND T2.winner_id  =  T1.player_id,WRONG
wta_1,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,SELECT player_name FROM matches WHERE year  =  2013 AND winner_id IN (SELECT player_id FROM players WHERE first_name = 'Juan Martin del Potro' AND last_name = 'del Potro' AND hand = '2H'),WRONG
wta_1,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE tourney_date  =  '2013' OR tourney_date  =  '2016' AND winner_id IS NOT NULL,WRONG
wta_1,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,SELECT count(*) FROM matches WHERE tourney_date  =  '2013' OR tourney_date  =  '2016' AND tourney_level  =  'ITTF Pro Tour',WRONG
wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT      players.player_id,     players.first_name,     players.last_name,     matches.winner_hand,     matches.winner_ht,     matches.winner_id,     matches.winner_ioc,     matches.winner_name,     matches.winner_rank,     matches.winner_rank_points,     matches.winner_seed,     matches.match_num,     matches.minutes,     matches.round,     matches.score,     matches.surface,     matches.tourney_date,     matches.tourney_id,     matches.tourney_level,     matches.tourney_name,     rankings.ranking,     rankings.ranking_points,     rankings.tours FROM     players     LEFT JOIN matches ON matches.winner_id = players.player_id     LEFT JOIN rankings ON rankings.player_id = players.player_id WHERE     matches.tourney_id = 'WTA Championships' AND matches.tourney_date = '2018-11-04' AND matches.winner_id IS NOT NULL AND matches.loser_id IS NOT NULL AND matches.match_num = 1 AND matches.round = 1 AND matches.score = 6-4 AND matches.surface = 'Hard' AND matches.tourney_name = 'WTA Championships' AND matches.",WRONG
wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","SELECT first_name ,  country_code FROM players WHERE won =  'WTA Championships' AND won =  'Australian Open'",WRONG
wta_1,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1",WRONG
wta_1,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1",WRONG
wta_1,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name ,  last_name FROM players ORDER BY birth_date",CORRECT
wta_1,"SELECT first_name ,  last_name FROM players ORDER BY birth_date","SELECT first_name ,  last_name ,  birth_date FROM players ORDER BY birth_date",WRONG
wta_1,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT first_name ,  last_name FROM players ORDER BY birth_date",WRONG
wta_1,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","SELECT last_name,  first_name FROM players WHERE hand  =  'L' ORDER BY birth_date",CORRECT
wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name ,  T1.country_code FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.ranking_points DESC LIMIT 1",WRONG
wta_1,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.ranking_points DESC LIMIT 1",WRONG
wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1,CORRECT
wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1,CORRECT
wta_1,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT name ,  rank_points FROM winner ORDER BY most DESC LIMIT 1",WRONG
wta_1,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT T1.player_name ,  T1.ranking_points FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.match_num  =  (SELECT max(match_num) FROM matches) GROUP BY T2.winner_id ORDER BY T2.ranking_points DESC",WRONG
wta_1,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,"SELECT winner_name FROM rankings WHERE tourney_id = 1 AND tourney_level = 1 AND tourney_name = ""Australian Open"" ORDER BY ranking_date DESC LIMIT 1",WRONG
wta_1,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT player_name FROM rankings WHERE ranking_points  =  (SELECT max(ranking_points) FROM rankings) AND tournament  =  'Australian Open',WRONG
wta_1,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT first_name ,  last_name FROM players WHERE match_num = (SELECT max(match_num) FROM matches)",WRONG
wta_1,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT first_name ,  last_name FROM players WHERE match_num = (SELECT max(match_num) FROM matches)",WRONG
wta_1,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT avg(ranking_points) ,  first_name FROM rankings GROUP BY first_name",WRONG
wta_1,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT T1.first_name, avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id",WRONG
wta_1,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT ranking_points ,  first_name FROM rankings JOIN players ON rankings.player_id = players.player_id",WRONG
wta_1,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","SELECT first_name, last_name, sum(ranking_points) FROM players GROUP BY first_name, last_name",WRONG
wta_1,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","SELECT player_id ,  COUNT (DISTINCT country_code) FROM players GROUP BY player_id",WRONG
wta_1,"SELECT count(*) ,  country_code FROM players GROUP BY country_code",SELECT count(*) FROM players,WRONG
wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM player GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1,WRONG
wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM player ORDER BY count(*) DESC LIMIT 1,WRONG
wta_1,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM rankings WHERE player_id  >  50,WRONG
wta_1,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,SELECT country_code FROM rankings GROUP BY country_code HAVING count(*)  >  50,WRONG
wta_1,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",SELECT count(*) FROM rankings,WRONG
wta_1,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",SELECT count(*) FROM rankings,WRONG
wta_1,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",SELECT count(*) FROM matches,WRONG
wta_1,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",SELECT count(*) FROM matches,WRONG
wta_1,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT T1.name,T1.rank FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T2.birth_date  <= (SELECT min(birth_date) FROM players) AND T2.player_id = (SELECT min(player_id) FROM rankings)",WRONG
wta_1,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT T1.name ,  T1.rank FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T2.birth_date  <= (SELECT min(birth_date) FROM players) AND T2.player_id IN (SELECT T1.player_id FROM rankings AS T1 ON T1.player_id = T2.player_id WHERE T2.ranking_date = (SELECT min(ranking_date) FROM rankings))",WRONG
wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',SELECT count(*) FROM matches WHERE winner_hand = 'left' AND tourney_id = (SELECT tourney_id FROM matches WHERE winner_hand = 'right'),WRONG
wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',"SELECT count(*) FROM matches WHERE winner_hand = ""Left"" AND tourney_id = (SELECT tourney_id FROM rankings)",WRONG
wta_1,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_points = (SELECT max(ranking_points) FROM rankings) AND T2.player_id = (SELECT winner_id FROM matches) AND T1.player_id = (SELECT winner_id FROM matches)",WRONG
wta_1,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.rank_points DESC LIMIT 1",WRONG
wta_1,"SELECT count(*) ,  hand FROM players GROUP BY hand",SELECT count(*) as num_players FROM players,WRONG
wta_1,"SELECT count(*) ,  hand FROM players GROUP BY hand",SELECT count(*) FROM players,WRONG
battle_death,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',SELECT count(*) FROM ship WHERE ship_type  =  'Captured',WRONG
battle_death,"SELECT name ,  tonnage FROM ship ORDER BY name DESC","SELECT name ,  tonnage FROM ship ORDER BY tonnage DESC",WRONG
battle_death,"SELECT name ,  date FROM battle","SELECT name ,  date ,  result FROM battle",WRONG
battle_death,"SELECT max(killed) ,  min(killed) FROM death","SELECT max(killed) ,  min(killed) ,  max(injured) ,  min(injured) FROM death GROUP BY date",WRONG
battle_death,SELECT avg(injured) FROM death,SELECT avg(average_injuries) FROM (SELECT COUNT(DISTINCT killed) as average_injuries FROM death),WRONG
battle_death,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","SELECT DISTINCT death.caused_by_ship_id,injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = (SELECT t FROM ship) AND ship.id = (SELECT ship.id FROM ship)",WRONG
battle_death,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT T1.name ,  T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.id WHERE T2.bulgarian_commander != 'Boril' AND T2.latin_commander != 'Boril'",WRONG
battle_death,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type = 'Brig' AND T2.disposition_of_ship = 'Lost'",WRONG
battle_death,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id WHERE T2.killed + T2.injured  > 10 GROUP BY T1.id HAVING COUNT(T2.id) > 10",WRONG
battle_death,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id,T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id WHERE T2.killed + T2.injured  =  (SELECT max(killed + injured) FROM death) GROUP BY T1.id,T1.name ORDER BY T2.killed + T2.injured DESC",WRONG
battle_death,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',SELECT DISTINCT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',CORRECT
battle_death,SELECT count(DISTINCT RESULT) FROM battle,SELECT count(*) FROM battle,CORRECT
battle_death,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,SELECT count(*) FROM battle WHERE ship.tonnage = 225 AND ship.lost_in_battle = 0,WRONG
battle_death,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","SELECT name ,  date FROM battle WHERE ship_id  =  'Lettice' OR ship_id  =  'HMS Atalanta'",WRONG
battle_death,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","SELECT name ,  result ,  bulgarian_commander ,  ship_name ,  tonnage ,  ship_type ,  location ,  disposition_of_ship FROM battle WHERE lost_in_battle = 0 AND location =  'English Channel' AND ship_name =  'English Channel'",WRONG
battle_death,SELECT note FROM death WHERE note LIKE '%East%',SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.name LIKE '%East%' AND T2.location LIKE '%East%',WRONG
student_transcripts_tracking,"SELECT line_1 ,  line_2 FROM addresses",SELECT * FROM Addresses,WRONG
student_transcripts_tracking,"SELECT line_1 ,  line_2 FROM addresses","SELECT line_1, line_2 FROM Addresses",CORRECT
student_transcripts_tracking,SELECT count(*) FROM Courses,SELECT count(*) FROM Courses,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Courses,SELECT count(*) FROM Courses,CORRECT
student_transcripts_tracking,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_name FROM Courses WHERE course_id = 1 AND course_name = 'Math',WRONG
student_transcripts_tracking,SELECT course_description FROM Courses WHERE course_name  =  'math',SELECT course_description FROM Courses,WRONG
student_transcripts_tracking,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' AND address_id = (SELECT address_id FROM Addresses WHERE city  =  'Port Chelsea'),CORRECT
student_transcripts_tracking,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' AND address_id = (SELECT address_id FROM Addresses WHERE city  =  'Port Chelsea'),CORRECT
student_transcripts_tracking,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT dept_name ,  dept_id FROM Departments JOIN Degree_Programs ON Departments.dept_id = Degree_Programs.department_id GROUP BY dept_name ORDER BY sum(degree_summary_description) DESC LIMIT 1",WRONG
student_transcripts_tracking,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT department_name,department_id FROM Departments GROUP BY department_name ORDER BY COUNT(*) DESC",WRONG
student_transcripts_tracking,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(*) FROM Degree_Programs WHERE department_id IS NOT NULL,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(*) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(*) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(*) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Degree_Programs WHERE department_id  =  'Engineering',CORRECT
student_transcripts_tracking,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',SELECT count(*) FROM Degree_Programs WHERE department_name  =  'Engineering',WRONG
student_transcripts_tracking,"SELECT section_name ,  section_description FROM Sections","SELECT section_name, section_description FROM SECTION",WRONG
student_transcripts_tracking,"SELECT section_name ,  section_description FROM Sections","SELECT section_name, section_description FROM SECTION",WRONG
student_transcripts_tracking,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT course_name, course_id FROM Courses WHERE sec_id <= 2 GROUP BY course_id",WRONG
student_transcripts_tracking,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","SELECT course_name ,  course_id ,  sec_id FROM Courses LEFT JOIN SECTION ON Courses.course_id = SECTION.course_id WHERE sec_id  <  2 AND SECTION.course_id IS NOT NULL",WRONG
student_transcripts_tracking,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,CORRECT
student_transcripts_tracking,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,CORRECT
student_transcripts_tracking,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name,  T1.semester_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id = (SELECT T1.course_id FROM Courses AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.degree_summary_name = ""Bachelor of Arts"")",WRONG
student_transcripts_tracking,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT semester_name ,  semester_id ,  student_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id",WRONG
student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT dept_description FROM Departments WHERE dept_name LIKE '%the computer%',WRONG
student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%Computer%',CORRECT
student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.student_id ,  T1.first_name,  T1.middle_name,  T1.last_name FROM student AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_program_id IN (SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.semester_id  =  Semesters.semester_id)",WRONG
student_transcripts_tracking,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id ,  T2.degree_program_id ,  T3.semester_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T3.semester_id  =  T4.semester_id WHERE T4.semester_id  =  'one semester' AND T3.degree_program_id IN (SELECT T4.degree_program_id FROM Degree_Programs AS T4 JOIN Student_Enrolment AS T3 ON T4.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T2 ON T3.semester_id  =  T2.semester_id WHERE T2.semester_id  =  'one semester')",WRONG
student_transcripts_tracking,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.department_id  =  T3.department_id WHERE T3.degree_summary_name = 'Bachelor'",WRONG
student_transcripts_tracking,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.ID  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'",WRONG
student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY count(T2.degree_program_id) DESC LIMIT 1,CORRECT
student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT degree_summary_name FROM Degree_Programs GROUP BY degree_summary_name ORDER BY count(*) DESC LIMIT 1,CORRECT
student_transcripts_tracking,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id, T1.degree_summary_name FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_id = T2.student_id WHERE T2.course_id = (SELECT T1.course_id FROM Courses AS T1 JOIN Degree_Programs AS T2 ON T1.course_id = T2.course_id WHERE T2.degree_summary_name = 'Most Popular')",WRONG
student_transcripts_tracking,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT degree_program_id,degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT id, first_name, middle_name, last_name, count(*) ,  student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT first_name ,  middle_name ,  last_name ,  student_id ,  student_enrolment_id FROM Student",WRONG
student_transcripts_tracking,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE student_enrolment_id IS NULL,WRONG
student_transcripts_tracking,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE student_enrolment_id IS NULL,WRONG
student_transcripts_tracking,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment),WRONG
student_transcripts_tracking,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment),WRONG
student_transcripts_tracking,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT course_name FROM Courses JOIN Student_Enrolment ON Courses.course_id = Student_Enrolment.course_id GROUP BY course_name ORDER BY count(*) DESC LIMIT 1,WRONG
student_transcripts_tracking,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment) ORDER BY count(*) DESC LIMIT 1,WRONG
student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,"SELECT last_name FROM Student_Enrolment WHERE student.permanent_address_id IS NOT NULL AND student.current_address_id IS NOT NULL AND student.state_province_county = ""North Carolina"" AND student.degree_program_id IS NULL",WRONG
student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,"SELECT last_name FROM Students WHERE student.permanent_address_id NOT IN (SELECT student.permanent_address_id FROM Students WHERE student.state_province_county = ""North Carolina"" AND student.degree_program_id IS NOT NULL)",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date,T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id WHERE T2.student_course_id IN (SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id  =  T2.student_id WHERE T2.degree_program_id IN (SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name LIKE '%Business%') AND T2.department_name LIKE '%Business%') AND T2.transcript_id IN (SELECT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id WHERE T2.student_course_id IN (SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id  =  T2.student_id WHERE T2.degree_program_id IN (SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","SELECT T1.transcript_date,T1.transcript_id FROM Transcripts AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T2.course_id HAVING count(*)  >= 2",WRONG
student_transcripts_tracking,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',CORRECT
student_transcripts_tracking,select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward',SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward' AND student_id = Student_Enrolment.student_id,WRONG
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name,  middle_name,  last_name FROM Student_Enrolment ORDER BY date_first_registered ASC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name ,  middle_name ,  last_name FROM Student_Enrolment ORDER BY date_first_registered ASC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name ,  middle_name ,  last_name FROM Student ORDER BY date_first_registered ASC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Student_Enrolment ORDER BY date_first_registered ASC LIMIT 1",WRONG
student_transcripts_tracking,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Addresses WHERE address_id != current_address_id,WRONG
student_transcripts_tracking,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT      first_name FROM     Students WHERE     permanent_address_id != current_address_id ORDER BY     first_name,CORRECT
student_transcripts_tracking,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT address_id, other_address_details FROM Addresses ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT address_id, line_1, line_2 FROM Addresses ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date,other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",CORRECT
student_transcripts_tracking,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT max(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT max(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",SELECT count(*) FROM Transcript_Contents,WRONG
student_transcripts_tracking,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT max ( count ( * ) ) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING count ( * ) > 1",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date,T1.transcript_id FROM Transcripts AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.transcript_id  =  T2.transcript_id WHERE T2.student_course_id  =  (SELECT T1.student_course_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id) ORDER BY T2.student_course_id DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date,T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id ORDER BY T2.results DESC LIMIT 1",WRONG
student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_name FROM Semesters WHERE enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE dept_name IN ('Master', 'Bachelor')))",WRONG
student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE dept_name = ""Masters"") AND degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE dept_name = ""Bachelors"")",WRONG
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(*) FROM Addresses WHERE current_address_id IS NOT NULL,WRONG
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,SELECT address_id FROM Addresses WHERE address_id IN (SELECT permanent_address_id FROM Student_Enrolment),WRONG
student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT first_name ,  middle_name ,  last_name ,  cell_mobile_number ,  email_address ,  ssn ,  date_first_registered ,  date_left ,  other_student_details FROM Students ORDER BY last_name, middle_name, first_name DESC",WRONG
student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"SELECT last_name, first_name, middle_name FROM Students ORDER BY last_name DESC",WRONG
student_transcripts_tracking,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_name FROM SECTION,WRONG
student_transcripts_tracking,SELECT section_description FROM Sections WHERE section_name  =  'h',SELECT section_description FROM SECTION WHERE course_id = COURSE.course_id AND section_name = 'h',WRONG
student_transcripts_tracking,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"SELECT first_name FROM Students WHERE first_name IN (SELECT T1.country  from Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id WHERE T2.country  =  ""Haiti"") OR T1.cell_mobile_number  =  ""09700166582""",WRONG
student_transcripts_tracking,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',SELECT      first_name FROM     Students WHERE     permanent_address_id = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,WRONG
tvshow,SELECT Title FROM Cartoon ORDER BY title,SELECT title FROM Cartoon ORDER BY title,CORRECT
tvshow,SELECT Title FROM Cartoon ORDER BY title,SELECT title FROM Cartoon ORDER BY title,CORRECT
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT * FROM Cartoon WHERE Directed_by = ""Ben Jones"" AND Channel = TV_Channel.id JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id",WRONG
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT title FROM Cartoon WHERE directed_by = 'Ben Jones' AND Channel = TV_Channel.id,WRONG
tvshow,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"" AND Channel = TV_Channel.id",WRONG
tvshow,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr' AND Channel = TV_Channel.id AND Channel = TV_Channel.id,WRONG
tvshow,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT Title,Directed_by,Original_air_date FROM Cartoon ORDER BY Original_air_date",WRONG
tvshow,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT title, Directed_by FROM Cartoon ORDER BY Air_Date",WRONG
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",SELECT title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti',CORRECT
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",SELECT title FROM Cartoon WHERE Directed_by  =  'Ben Jones' OR Directed_by  =  'Brandon Vietti',CORRECT
tvshow,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country ,  COUNT(DISTINCT TV_Channel.id) AS Number_of_TV_Channels FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel_id GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1",WRONG
tvshow,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country ,  COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
tvshow,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","SELECT count(*) ,  series_name ,  Content FROM TV_Channel GROUP BY series_name,Content",WRONG
tvshow,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",SELECT count(*) FROM TV_Channel,WRONG
tvshow,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT serial_name FROM TV_Channel WHERE Channel = (SELECT T1.serial_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.id  =  T2.Channel WHERE T2.Content  =  ""Sky Radio"")",WRONG
tvshow,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",SELECT Content FROM TV_series WHERE series_name = 'Sky Radio' AND Channel = 'Sky Radio',WRONG
tvshow,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE serial_name = ""Sky Radio"" AND Channel = 1",WRONG
tvshow,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";",SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio' AND Channel = 'Sky Radio',WRONG
tvshow,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE Language = 'English' AND Channel = 'ABC',WRONG
tvshow,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE Language = English AND Channel = 'English',WRONG
tvshow,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language,count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) DESC LIMIT 1",WRONG
tvshow,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT T1.language,  count(T1.language) FROM TV_Channel AS T1 GROUP BY T1.language ORDER BY count(T1.language) DESC LIMIT 1",WRONG
tvshow,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language ,  Channel FROM TV_Channel GROUP BY Language",WRONG
tvshow,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language ,  count(*) FROM TV_Channel GROUP BY Language",CORRECT
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",SELECT Channel.series_name FROM Cartoon Cartoon ON Channel.id = Cartoon.Channel AND Cartoon.Title = 'The Rise of the Blue Beetle!',WRONG
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";","SELECT series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = ""The Rise of the Blue Beetle"" AND Cartoon.Channel = TV_Channel.id",WRONG
tvshow,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT title FROM Cartoon WHERE Channel = 'Sky Radio' AND (SELECT series_name FROM TV_Channel WHERE Channel = 'Sky Radio');,WRONG
tvshow,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT T1.title FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.Channel  =  T2.id WHERE T2.id = 1 AND T2.name = ""Sky Radio""",WRONG
tvshow,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating,CORRECT
tvshow,SELECT Episode FROM TV_series ORDER BY rating,SELECT * FROM TV_series ORDER BY Rating DESC,WRONG
tvshow,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT      TV_series.Episode,     TV_series.Rating FROM     TV_series     JOIN     Cartoon ON TV_series.Channel = Cartoon.id     JOIN     TV_Channel ON Cartoon.id = TV_Channel.id WHERE     Rating > (SELECT AVG(Rating) FROM TV_series) GROUP BY     TV_series.Episode ORDER BY     Rating DESC LIMIT 3;",WRONG
tvshow,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT T1.Episode,T1.Rating FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id ORDER BY T2.Rating DESC LIMIT 3",WRONG
tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(Share) ,  max(Share) FROM TV_series",CORRECT
tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(Share) ,  min(Share) FROM TV_series WHERE Channel = 'Cartoon'",WRONG
tvshow,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT T1.Air_Date FROM TV_series AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel_id WHERE T2.Episode  =  ""A Love of a Lifetime"" AND T2.Channel_id = 1",WRONG
tvshow,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",SELECT Channel FROM TV_Channel WHERE Channel = 'A Love of a Lifetime' AND Production_code = '101',WRONG
tvshow,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"" AND Channel = Cartoon.Channel",WRONG
tvshow,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",SELECT Weekly_Rank FROM TV_series WHERE Title = 'A Love of a Lifetime' AND Channel = 'Cartoon',WRONG
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  ""A Love of a Lifetime"" AND T2.Channel  =  ""Cartoon""",WRONG
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","SELECT series_name FROM TV_series WHERE Episode  =  ""A Love of a Lifetime"" AND Channel  =  ""Cartoon""",WRONG
tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",SELECT Episode FROM TV_series WHERE Channel  =  'Sky Radio',WRONG
tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT episode FROM TV_series WHERE series_name = ""Sky Radio"" AND Channel = 1",WRONG
tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",SELECT count(*) FROM Cartoon WHERE Directed_by  =  'Hank Ketcham' AND Channel = 'ABC',WRONG
tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",SELECT count(*) FROM Cartoon WHERE directed_by != '' GROUP BY directed_by,WRONG
tvshow,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT Production_code, Channel FROM Cartoon ORDER BY Air_Date DESC LIMIT 1",WRONG
tvshow,"select production_code ,  channel from cartoon order by original_air_date desc limit 1","SELECT Production_code ,  Channel FROM Cartoon ORDER BY Production_code DESC LIMIT 1",WRONG
tvshow,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT Package_Option ,  series_name FROM TV_Channel WHERE Package_Option = 'High Definition TV' AND Channel = (SELECT Channel FROM Cartoon WHERE id = (SELECT id FROM TV_series WHERE Episode = (SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE Package_Option = 'High Definition TV')))",WRONG
tvshow,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","SELECT T1.Package_Option,  T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel",WRONG
tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT Channel FROM TV_Channel WHERE Title = Todd Casey AND Channel = 'US',WRONG
tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',"SELECT T1.id,T1.series_name,T1.Country,T1.Language,T1.Content,T1.Pixel_aspect_ratio_PAR,T1.Hight_definition_TV,T1.Pay_per_view_PPV,T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.id WHERE T2.Written_by  =  Todd Casey AND T2.Channel  =  Todd Casey",WRONG
tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT Country FROM TV_Channel WHERE Channel NOT IN (SELECT Channel FROM Cartoon WHERE Todd_Casey = 'Yes'),WRONG
tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',SELECT Country FROM TV_Channel WHERE Written_by != Todd Casey,WRONG
tvshow,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name ,  T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  Ben Jones AND T2.Written_by  =  Michael Chang AND T2.Channel  =  T1.id",WRONG
tvshow,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","SELECT T1.series_name ,  T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by = Ben Jones AND T2.Written_by = Ben Jones",WRONG
tvshow,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR FROM TV_Channel WHERE Language != ""English"" AND Channel != ""English""",WRONG
tvshow,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT      TV_Channel.id,     TV_Channel.series_name,     TV_Channel.Country,     TV_Channel.Language,     TV_Channel.Content,     TV_Channel.Pixel_aspect_ratio_PAR,     TV_Channel.Hight_definition_TV,     TV_Channel.Pay_per_view_PPV,     TV_Channel.Package_Option FROM     TV_Channel WHERE     TV_Channel.Channel != 'English' GROUP BY     TV_Channel.id ORDER BY     TV_Channel.id",WRONG
tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.id WHERE T2.Country IN (SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.id GROUP BY T2.Country HAVING COUNT(*) > 2),WRONG
tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Channel > 2 AND T2.Channel != 2,WRONG
tvshow,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  !=  'Ben Jones' AND T2.Channel  !=  T1.id,WRONG
tvshow,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',SELECT,WRONG
tvshow,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),"SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = ""Ben Jones"")",CORRECT
tvshow,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),SELECT Package_Option FROM TV_Channel WHERE Channel NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones'),WRONG
poker_player,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,CORRECT
poker_player,SELECT count(*) FROM poker_player,SELECT COUNT (Poker_Player_ID) FROM poker_player,CORRECT
poker_player,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,CORRECT
poker_player,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,CORRECT
poker_player,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made ,  Best_Finish FROM poker_player GROUP BY Final_Table_Made ORDER BY Best_Finish DESC LIMIT 10",CORRECT
poker_player,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","SELECT Final_Table_Made ,  Best_Finish FROM poker_player",CORRECT
poker_player,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player WHERE poker_player.People_ID = people.People_ID,WRONG
poker_player,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player WHERE poker_player.People_ID = people.People_ID,WRONG
poker_player,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,CORRECT
poker_player,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,CORRECT
poker_player,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000 GROUP BY People_ID,WRONG
poker_player,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  < 200000 AND T2.People_ID IS NOT NULL,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT name FROM poker_player WHERE poker_player.People_ID = people.People_ID,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,SELECT name FROM poker_player,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT Name FROM poker_player WHERE Earnings > 300000,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,SELECT Name FROM poker_player WHERE Earnings > 300000,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,SELECT Name ORDER BY Final_Table_Made ASC FROM poker_player WHERE poker_player.People_ID = people.People_ID,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,"SELECT Name ,  Final_Table_Made FROM poker_player ORDER BY Final_Table_Made DESC LIMIT 10",WRONG
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1),CORRECT
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1),CORRECT
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1,WRONG
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  =  (SELECT max(Height) FROM people),CORRECT
poker_player,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(Earnings) FROM poker_player WHERE People_ID  =  people.People_ID AND Height  > 200,WRONG
poker_player,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,SELECT avg(Earnings) FROM poker_player WHERE People_ID  =  people.People_ID AND Height  > 200,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,SELECT Name ORDER BY Earnings DESC FROM poker_player,WRONG
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,"SELECT Name ,  Earnings FROM poker_player ORDER BY Earnings DESC LIMIT 1",WRONG
poker_player,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality ,  count(*) FROM people GROUP BY Nationality",CORRECT
poker_player,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",SELECT count(*) FROM people WHERE Nationality  =  'American',WRONG
poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1,CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1,CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT nationality FROM people WHERE nationality IN (SELECT nationality FROM poker_player GROUP BY nationality HAVING count(*)  >= 3),WRONG
poker_player,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >  2,CORRECT
poker_player,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name ,  Birth_Date FROM people ORDER BY Name",CORRECT
poker_player,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","SELECT Name ,  Birth_Date FROM people ORDER BY Name",CORRECT
poker_player,"SELECT Name FROM people WHERE Nationality != ""Russia""",SELECT name FROM people WHERE Nationality != 'Russia',CORRECT
poker_player,"SELECT Name FROM people WHERE Nationality != ""Russia""",SELECT DISTINCT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Nationality  <>  'Russia',WRONG
poker_player,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),CORRECT
poker_player,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),CORRECT
poker_player,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT nationality) FROM people,CORRECT
poker_player,SELECT count(DISTINCT Nationality) FROM people,SELECT count(DISTINCT nationality) FROM poker_player,WRONG
voter_1,SELECT count(*) FROM area_code_state,SELECT count(*) FROM AREA_CODE_STATE,CORRECT
voter_1,"SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number ,  contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",CORRECT
voter_1,"SELECT vote_id ,  phone_number ,  state FROM votes","SELECT vote_id, phone_number, state FROM VOTES",CORRECT
voter_1,"SELECT max(area_code) ,  min(area_code) FROM area_code_state","SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE",CORRECT
voter_1,SELECT max(created) FROM votes WHERE state  =  'CA',"SELECT max(created) FROM VOTES WHERE state = ""CA""",CORRECT
voter_1,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',CORRECT
voter_1,"SELECT DISTINCT state ,  created FROM votes","SELECT DISTINCT state, created FROM AREA_CODE_STATE",WRONG
voter_1,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","SELECT T1.contestant_number,T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.vote_id IN (SELECT T1.vote_id FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state) AND T2.contestant_number  > 1 GROUP BY T1.contestant_number",WRONG
voter_1,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT contestant_number ,  contestant_name FROM VOTES ORDER BY vote_id DESC LIMIT 1",WRONG
voter_1,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',SELECT count(*) FROM VOTES WHERE state  =  'NY' OR state  =  'CA',CORRECT
voter_1,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT count(*) FROM VOTES WHERE vote_id NOT IN (SELECT contestant_number FROM CONTESTANTS),WRONG
voter_1,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,SELECT area_code FROM AREA_CODE_STATE GROUP BY area_code ORDER BY count(*) DESC LIMIT 1,WRONG
voter_1,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","SELECT created,state,phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' AND AREA_CODE_STATE.area_code = CONTESTANTS.area_code",WRONG
voter_1,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',SELECT DISTINCT AREA_CODE_STATE.area_code FROM VOTES WHERE VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') AND VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss'),WRONG
voter_1,"select contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM contestants WHERE contestants.contestant_name LIKE '%Al%',CORRECT
world_1,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear  >  1950,CORRECT
world_1,SELECT Name FROM country WHERE IndepYear  >  1950,SELECT Name FROM country WHERE IndepYear > 1950,CORRECT
world_1,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT count(*) FROM country WHERE GNPOld = 'Republic',WRONG
world_1,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""",SELECT sum(Population) FROM country WHERE GovernmentForm = 'Republic' GROUP BY CountryCode,WRONG
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",SELECT sum(SurfaceArea) FROM country WHERE CountryCode  =  'Caribbean' GROUP BY CountryCode,WRONG
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Carribean' GROUP BY CountryCode,WRONG
world_1,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",SELECT Continent FROM country WHERE Name = 'Anguilla' AND CountryCode = 'NA',WRONG
world_1,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",SELECT Continent FROM country WHERE Code  =  'AI' AND CountryCode = 'NA',WRONG
world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Name FROM city WHERE CountryCode = 'Kabul' AND District = 'Kabul',WRONG
world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",SELECT Name FROM country WHERE Code  =  'AF' AND Region  =  'Asia',WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode = 'Aruba' ORDER BY Percentage DESC LIMIT 1,WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode  =  'AW' AND Language  =  'Papiamento',WRONG
world_1,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT T1.Population,T2.LifeExpectancy FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  ""Brazil""",WRONG
world_1,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","SELECT Population,LifeExpectancy FROM country WHERE CountryCode  =  'Brazil'",WRONG
world_1,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Region,  Population FROM country WHERE CountryCode  =  'Angola'",WRONG
world_1,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","SELECT Name,Continent,Region,Population FROM country WHERE Name = 'Angola' AND CountryCode = 'ANG'",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",SELECT      AVG(lifeExpectancy) AS averageLifeExpectancy FROM     country WHERE     continent = 'Central Africa' GROUP BY     country.Code,WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Central' AND Region  =  'Africa' AND CountryCode  =  'Central',WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",SELECT Name FROM country WHERE LifeExpectancy  =  (SELECT min(LifeExpectancy) FROM country) AND CountryCode = (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese'),WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",SELECT Name FROM country WHERE LifeExpectancy  =  (SELECT min(LifeExpectancy) FROM country),WRONG
world_1,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'",CORRECT
world_1,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","SELECT Population,max(GNP) FROM country GROUP BY continent",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE CountryCode = ""African"" AND GovernmentForm = ""Republic""",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""",SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic' GROUP BY CountryCode,WRONG
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""",SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe' GROUP BY Continent,WRONG
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe"" GROUP BY Continent",WRONG
world_1,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""",SELECT Population FROM city WHERE Name = 'Gelderland' AND District = 'Gelderland',WRONG
world_1,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""",SELECT sum(Population) FROM city WHERE District  =  'Gelderland' AND CountryCode  =  'NL',WRONG
world_1,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) ,  avg(Population) FROM country WHERE GovernmentForm = 'US Territory' GROUP BY CountryCode",WRONG
world_1,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","SELECT avg(GNP) ,  avg(Population) FROM country WHERE CountryCode = 'US'",WRONG
world_1,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(*) FROM countrylanguage WHERE CountryCode IS NOT NULL,CORRECT
world_1,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT count(DISTINCT language) FROM countrylanguage,CORRECT
world_1,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",SELECT count(*) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic',WRONG
world_1,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",SELECT count(*) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  !=  'Constitutional Monarchy' AND CountryCode  !=  'ZZ',WRONG
world_1,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT sum(Total) FROM countrylanguage WHERE CountryCode = 'Aruba',WRONG
world_1,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",SELECT count(*) FROM countrylanguage WHERE CountryCode  =  'Aruba' AND Language  =  'Papiamento',WRONG
world_1,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT count(*) FROM countrylanguage WHERE CountryCode  =  'Afghanistan' AND Language  =  'official',WRONG
world_1,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",SELECT count(*) FROM countrylanguage WHERE CountryCode  =  'Afghanistan' AND Language  =  'official',WRONG
world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country ORDER BY count(*) DESC LIMIT 1,WRONG
world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM country WHERE CountryCode = (SELECT max(CountryCode) FROM countrylanguage),WRONG
world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT Continent FROM countrylanguage GROUP BY Continent ORDER BY count(*) DESC LIMIT 1,WRONG
world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,SELECT Continent FROM country GROUP BY Continent ORDER BY sum(Population) DESC LIMIT 1,WRONG
world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT count(*) FROM countrylanguage WHERE Language  =  'English' AND Language  =  'Dutch',WRONG
world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")",SELECT count(*) FROM countrylanguage WHERE IsOfficial  =  'English' OR IsOfficial  =  'Dutch' AND CountryCode  =  'NZ',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT Name FROM country WHERE Language  =  'English' OR Language  =  'French',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",SELECT Name FROM country WHERE IsOfficial = 1 AND CountryCode = 'EN' OR CountryCode = 'FR',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT Name FROM country WHERE Language = 'English' OR Language = 'French' AND CountryCode IN (SELECT CountryCode FROM city),WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",SELECT Name FROM country WHERE Language  =  'English' OR Language  =  'French',WRONG
world_1,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT count(DISTINCT Continent) FROM countrylanguage WHERE Language = 'Chinese' AND CountryCode = country.Code,WRONG
world_1,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",SELECT count(*) FROM country WHERE Language  =  'Chinese' AND IsOfficial  =  'Yes' AND CountryCode  =  'CN' AND Code2  =  'CN' GROUP BY CountryCode,WRONG
world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT Name,CountryCode,District,Population FROM countrylanguage WHERE Language IN ('English', 'Dutch')",WRONG
world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","SELECT Name,IsOfficial,Language,Percentage FROM countrylanguage WHERE IsOfficial = 1 OR Language = 'Dutch' OR Language = 'English'",WRONG
world_1,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""",SELECT CountryCode FROM countrylanguage WHERE Language  =  'English' OR Language  =  'Dutch',WRONG
world_1,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""",SELECT * FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch' AND CountryCode = 'NZ',WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE Continent  =  'Asian' ORDER BY Percentage DESC LIMIT 1,WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(*) DESC LIMIT 1,WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",SELECT Language FROM countrylanguage WHERE CountryCode  =  'Republic' AND IsOfficial  =  '1' GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1,WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1","SELECT Language,IsOfficial FROM countrylanguage WHERE CountryCode = (SELECT CountryCode FROM country WHERE GovernmentForm = ""Republic"") AND IsOfficial = 1",WRONG
world_1,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT max(Population) FROM city WHERE CountryCode = 'EN' AND Language = 'English',WRONG
world_1,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",SELECT CountryCode FROM city WHERE Population  =  (SELECT max(Population) FROM city) AND Language = 'English',WRONG
world_1,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name,Population,LifeExpectancy,Continent,SurfaceArea FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1",WRONG
world_1,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name,Population,LifeExpectancy,Continent FROM country WHERE Continent  =  'Asia' ORDER BY Population DESC LIMIT 1",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT avg(LifeExpectancy) FROM country WHERE Language != 'English',WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",SELECT avg(LifeExpectancy) FROM country WHERE Language != 'English',WRONG
world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT sum(Population) FROM country WHERE Language != 'English',WRONG
world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",SELECT count ( * ) FROM countrylanguage WHERE T1.IsOfficial  =  0 AND T1.CountryCode != 'en',WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""","SELECT Language FROM countrylanguage WHERE CountryCode = ""NL"" AND HeadOfState = ""Beatrix""",WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""","SELECT Language FROM countrylanguage WHERE CountryCode = ""NL"" AND HeadOfState = ""Beatrix""",WRONG
world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT count(*) FROM countrylanguage WHERE CountryCode  =  'GBR' AND Language  =  'English' AND IsOfficial  =  '1' AND Percentage  >  0,WRONG
world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",SELECT count(DISTINCT Language) FROM countrylanguage WHERE IndependenceYear < 1930,WRONG
world_1,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT T1.Name,T1.CountryCode,T1.SurfaceArea,T1.Population FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Percentage > 0 AND T2.CountryCode NOT IN (SELECT T1.CountryCode FROM city AS T1)",WRONG
world_1,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","SELECT  country.Name,country.Continent,country.Region,country.SurfaceArea,country.Population,country.LifeExpectancy,country.GNP,country.GNPOld,country.LocalName,country.GovernmentForm,country.HeadOfState,country.Capital,country.Code2 FROM country WHERE country.SurfaceArea > (SELECT country2.SurfaceArea FROM country2 WHERE country2.Continent = 'Europe') ORDER BY country.Name",WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")","SELECT T1.Name,T1.Population,T1.CountryCode,T1.Continent,T1.Region,T1.SurfaceArea,T1.IndepYear,T1.Population,T1.LifeExpectancy,T1.GNP,T1.GNPOld,T1.LocalName,T1.GovernmentForm,T1.HeadOfState,T1.Capital,T1.Code2 FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'True' AND T1.Population  <  (SELECT T3.Population FROM country AS T3 WHERE T3.Continent  =  'Asia')",WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")","SELECT Name,  Population FROM country WHERE Population < (SELECT Population FROM country  WHERE Language  =  'Asian' and  IsOfficial  =  'True')",WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",SELECT CountryCode FROM country WHERE Population > (SELECT max(Population) FROM country WHERE CountryCode = 'Asia'),WRONG
world_1,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")","SELECT Name,Population,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2 FROM country WHERE Population > (SELECT max(Population) FROM country WHERE Continent = 'Asia') AND Continent = 'Asia'",WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM countrylanguage WHERE IsOfficial  =  'N' AND CountryCode  =  'EN',WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM countrylanguage WHERE IsOfficial  =  'N' AND CountryCode != 'EN',WRONG
world_1,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT Code FROM countrylanguage WHERE Language != 'English' AND CountryCode != 'US' AND LifeExpectancy != 79.8,WRONG
world_1,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT Code FROM country WHERE Language != 'English' AND CountryCode != 'US',WRONG
world_1,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  = 0 AND T2.GovernmentForm  !=  ""Republic""",WRONG
world_1,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'False' AND T2.Language  =  'English' AND T2.IsOfficial  =  'False' AND T2.GovernmentForm  =  'Republic' AND T2.Code  !=  'US',WRONG
world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT Name FROM city WHERE countrylanguage.IsOfficial = 0 AND country.Continent = 'Europe',WRONG
world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),SELECT Name FROM city WHERE CountryCode = 'GB' EXCEPT SELECT Name FROM countrylanguage WHERE CountryCode = 'GB',WRONG
world_1,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",SELECT Name FROM city WHERE Continent  =  'Asia' AND CountryCode  =  'CN' AND Language  =  'zh' AND District  =  'Beijing',WRONG
world_1,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","SELECT Name FROM city WHERE CountryCode IN (SELECT T1.CountryCode FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.Code WHERE T2.Language  =  ""Chinese"" AND T1.Continent  =  ""Asia"")",WRONG
world_1,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT T1.Name,T1.IndependenceYear,T1.SurfaceArea FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.Code2 WHERE T2.Population  =  (SELECT min(Population) FROM city) ORDER BY T2.Population desc limit 1",WRONG
world_1,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT T1.Name ,  T1.IndepYear ,  T1.SurfaceArea FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode ORDER BY T2.Population desc limit 1",WRONG
world_1,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Population, Name, Leader FROM country ORDER BY SurfaceArea DESC LIMIT 1",WRONG
world_1,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name,Population,HeadOfState,SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 1",WRONG
world_1,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT Name,count(*) from countrylanguage  group by Name having count(*) > 2",WRONG
world_1,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","SELECT Name,IsOfficial,CountryCode,Language,Percentage FROM countrylanguage WHERE CountryCode = (SELECT CountryCode FROM country WHERE Language > 2)",WRONG
world_1,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",SELECT count ( * ) FROM city WHERE Population > (SELECT avg(Population) FROM city) group by District,WRONG
world_1,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",SELECT count(*) FROM city WHERE Population > (SELECT avg(Population) FROM city) group by District,WRONG
world_1,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT GovernmentForm,Population FROM country WHERE avg(life_expectancy) > 72 GROUP BY GovernmentForm",WRONG
world_1,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","SELECT T1.GovernmentForm,T1.Population FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode AND T2.Language  =  'English' WHERE T2.LifeExpectancy  > 72 AND T1.GovernmentForm IN (SELECT DISTINCT T3.GovernmentForm FROM country AS T3 JOIN country AS T2 ON T3.Code  =  T2.Code AND T2.LifeExpectancy  > 72)",WRONG
world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT avg(LifeExpectancy) ,  avg(Population) FROM country WHERE LifeExpectancy < 72 AND CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 1)",WRONG
world_1,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","SELECT continent,sum(Population),avg(LifeExpectancy) FROM country WHERE LifeExpectancy < 72 GROUP BY continent",WRONG
world_1,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name,  Area_km_2 FROM country ORDER BY Area_km_2 DESC LIMIT 5",WRONG
world_1,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name,SurfaceArea,Population FROM country ORDER BY SurfaceArea DESC LIMIT 5",WRONG
world_1,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,"SELECT Name,Population FROM country ORDER BY Population DESC LIMIT 3",WRONG
world_1,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,CORRECT
world_1,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,WRONG
world_1,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT 3 Name FROM country ORDER BY Population DESC LIMIT 3,WRONG
world_1,"SELECT count(*) FROM country WHERE continent  =  ""Asia""",SELECT count(*) FROM country WHERE Continent  =  'Asia' AND CountryCode  =  'Asia',WRONG
world_1,"SELECT count(*) FROM country WHERE continent  =  ""Asia""",SELECT count(*) FROM country WHERE Continent  =  'Asia' AND CountryCode  =  'Asia',WRONG
world_1,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent  =  ""Europe"" AND Population  =  80000",CORRECT
world_1,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","SELECT Name FROM country WHERE Continent  =  ""Europe"" AND Population  =  80000",CORRECT
world_1,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT T1.Population, T1.Area / T2.Area FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Continent = 'North America' AND T2.Area > 3000 GROUP BY T2.Continent",WRONG
world_1,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","SELECT T1.Population, T1.SurfaceArea FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T1.Continent = ""North"" AND T1.SurfaceArea > 3000",WRONG
world_1,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,"SELECT city.Name,city.CountryCode,city.District,city.Population FROM city WHERE city.Population BETWEEN 160000 AND 900000",WRONG
world_1,select name from city where population between 160000 and 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,CORRECT
world_1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",SELECT Language FROM countrylanguage GROUP BY CountryCode ORDER BY sum(Percentage) DESC LIMIT 1,WRONG
world_1,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2 FROM country",WRONG
world_1,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT sum ( Population ) FROM countrylanguage WHERE Language = ""Spanish"" GROUP BY CountryCode",WRONG
world_1,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT count(*) FROM countrylanguage WHERE IsOfficial  =  'Spanish' AND CountryCode = country.Code,WRONG
world_1,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","SELECT Code FROM countrylanguage WHERE Language = ""Spanish"" AND Percentage = (SELECT max(Percentage) FROM countrylanguage)",WRONG
world_1,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",SELECT Code FROM countrylanguage WHERE Language  =  'Spanish' AND CountryCode = city.CountryCode,WRONG
orchestra,SELECT count(*) FROM conductor,SELECT COUNT (DISTINCT Conduct_ID) FROM conductor,WRONG
orchestra,SELECT count(*) FROM conductor,SELECT COUNT (DISTINCT Conduct_ID) FROM conductor,WRONG
orchestra,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name ORDER BY Age ASC,WRONG
orchestra,SELECT Name FROM conductor ORDER BY Age ASC,"SELECT Name, Age FROM conductor ORDER BY Age",WRONG
orchestra,SELECT Name FROM conductor WHERE Nationality != 'USA',"SELECT Name FROM conductor WHERE Nationality != ""USA""",CORRECT
orchestra,SELECT Name FROM conductor WHERE Nationality != 'USA',"SELECT name FROM conductor WHERE nationality != ""USA""",CORRECT
orchestra,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1,WRONG
orchestra,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,CORRECT
orchestra,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,CORRECT
orchestra,SELECT avg(Attendance) FROM SHOW,SELECT avg(Attendance) FROM show,CORRECT
orchestra,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(Share) ,  min(Share) FROM show WHERE Type != ""Live final"" AND (Orchestra_ID = (SELECT Conductor_ID FROM conductor WHERE Name = 'Conductor_Name'))",WRONG
orchestra,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(Share) ,  min(Share) FROM show WHERE Type != ""Live final"" AND (Orchestra_ID = (SELECT Conductor_ID FROM conductor WHERE Name = 'Conductor_Name'))",WRONG
orchestra,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(*) FROM conductor,CORRECT
orchestra,SELECT count(DISTINCT Nationality) FROM conductor,SELECT count(distinct Nationality) FROM conductor,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name ORDER BY Year_of_Work DESC,WRONG
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"SELECT Name ,  Year_of_Work FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",WRONG
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,CORRECT
orchestra,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT Name, Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID",CORRECT
orchestra,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","SELECT Name, Conductor_ID FROM conductor JOIN orchestra ON Conductor_ID = Orchestra_ID",WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra),WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra) > 1,CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM conductor ORDER BY count (orchestra.Orchestra_ID) desc limit 1,WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT Name FROM conductor ORDER BY Conductor_ID DESC LIMIT 1,CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT Name FROM conductor WHERE Conductor_ID > 2008,WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,SELECT Name FROM conductor WHERE Conductor_ID NOT IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008),WRONG
orchestra,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",CORRECT
orchestra,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",SELECT count(*) FROM record_company,WRONG
orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format ,  Year_of_Founded FROM orchestra ORDER BY count(*) DESC LIMIT 1",WRONG
orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"SELECT Major_Record_Format_Frequency,Major_Record_Format FROM orchestra ORDER BY Major_Record_Format_Frequency DESC",WRONG
orchestra,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1,CORRECT
orchestra,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1,CORRECT
orchestra,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT name FROM orchestra WHERE performance IS NULL,WRONG
orchestra,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra_ID FROM orchestra WHERE Performance_ID IS NULL,WRONG
orchestra,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  > 2003 AND Year_of_Founded  < 2003 AND orchestra.Record_Company = (SELECT Record_Company FROM orchestra WHERE Year_of_Founded  < 2003),WRONG
orchestra,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,SELECT Record_Company FROM orchestra WHERE Date  <  '2003-01-01',WRONG
orchestra,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","SELECT count(*) FROM orchestra WHERE Record_Company = ""CD"" or Record_Company = ""DVD""",WRONG
orchestra,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""",SELECT count(*) FROM orchestra WHERE Record_Company  =  'CD' OR Record_Company  =  'DVD' AND Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD',WRONG
orchestra,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT max(Year_of_Founded) FROM orchestra WHERE Year_of_Founded > 0 GROUP BY Year_of_Founded ORDER BY Performance_ID DESC LIMIT 1,WRONG
orchestra,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT Year_of_Founded FROM orchestra WHERE Performance_ID > 1 AND Year_of_Founded > 0,WRONG
network_1,SELECT count(*) FROM Highschooler,SELECT COUNT (DISTINCT ID) FROM Highschooler,CORRECT
network_1,SELECT count(*) FROM Highschooler,SELECT COUNT (DISTINCT ID) FROM Highschooler,CORRECT
network_1,"SELECT name ,  grade FROM Highschooler","SELECT name ,  grade FROM Highschooler",CORRECT
network_1,"SELECT name ,  grade FROM Highschooler","SELECT name ,  grade FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = (SELECT name FROM Highschooler WHERE Highschooler.ID = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler",WRONG
network_1,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler WHERE student_id = ?,WRONG
network_1,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler WHERE student_id = ?,WRONG
network_1,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""",SELECT name FROM Highschooler WHERE ID  =  1 AND grade  =  1,WRONG
network_1,"SELECT grade FROM Highschooler WHERE name  =  ""Kyle""",SELECT grade FROM Highschooler WHERE ID  =  1 AND name = 'Kyle',WRONG
network_1,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade  =  10,CORRECT
network_1,SELECT name FROM Highschooler WHERE grade  =  10,SELECT name FROM Highschooler WHERE grade  =  10,CORRECT
network_1,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",SELECT ID FROM Highschooler WHERE name = 'Kyle',CORRECT
network_1,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",SELECT ID FROM Highschooler WHERE name = 'Kyle' AND grade = 'A',WRONG
network_1,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT COUNT (DISTINCT ID) FROM Highschooler WHERE grade  =  9 OR grade  =  10,CORRECT
network_1,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,SELECT count(*) FROM Highschooler WHERE grade  =  '9' OR grade  =  '10',CORRECT
network_1,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade","SELECT grade, count(*) FROM Highschooler GROUP BY grade",CORRECT
network_1,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",SELECT count(*) FROM Highschooler,WRONG
network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,SELECT grade FROM Highschooler WHERE grade  >=  4 AND student_id IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT liked_id FROM Likes)),WRONG
network_1,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,"SELECT ID,grade FROM Highschooler GROUP BY grade HAVE COUNT(*)  >=  4",WRONG
network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","SELECT student_id, liked_id FROM Friend JOIN Likes ON Friend.student_id = Likes.liked_id WHERE Friend.friend_id = Highschooler.ID AND Likes.student_id = Highschooler.ID GROUP BY student_id",WRONG
network_1,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",SELECT count(*) FROM Friend WHERE student_id = (SELECT student_id FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = (SELECT name FROM Highschooler WHERE ID = (SELECT ID FROM Likes WHERE liked_,WRONG
network_1,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT name ,  count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id GROUP BY name ORDER BY count(*) DESC LIMIT 10",WRONG
network_1,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT name ,  COUNT (liked_id) FROM Highschooler GROUP BY name",WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id GROUP BY Highschooler.ID ORDER BY count(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT name FROM Highschooler WHERE friend_id NOT IN (SELECT name FROM Friend WHERE Highschooler.ID = friend_id) GROUP BY name HAVE COUNT(*)  >=  3,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,SELECT name FROM highschooler WHERE id in (SELECT friend_id FROM friend WHERE liked_id  =  (SELECT count(*) from friend) - 1),WRONG
network_1,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",SELECT name FROM Highschooler WHERE ID = 10 AND friend_id IN (SELECT student_id FROM Friend WHERE friend_id = 10),WRONG
network_1,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",SELECT name FROM Friend WHERE friend_id = Highschooler.ID,WRONG
network_1,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT count(*) FROM Highschooler WHERE student_id = 1;,WRONG
network_1,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT count(*) FROM Friend WHERE student_id = Highschooler.ID AND liked_id = Highschooler.ID,WRONG
network_1,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT ID FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID AND Friend.liked_id = Highschooler.ID),WRONG
network_1,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.friend_id WHERE NOT EXISTS (SELECT 1 FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.ID  =  T2.ID WHERE T2.ID  =  T1.ID),WRONG
network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT name FROM Highschooler WHERE Friend.name IS NULL,WRONG
network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.friend_id WHERE T2.friend_id is null,WRONG
network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.friend_id JOIN Likes AS T3 ON T2.liked_id  =  T3.liked_id WHERE T3.liked_id  =  T1.ID AND T2.student_id = T1.ID,WRONG
network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT DISTINCT student_id FROM Friend WHERE friend_id IN (SELECT student_id FROM Highschooler) AND liked_id IN (SELECT student_id FROM Highschooler),WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.friend_id ON T2.student_id  =  T1.ID JOIN Likes AS T3 ON T2.liked_id  =  T3.liked_id ON T3.liked_id  =  T1.ID WHERE T3.liked_id  =  T1.ID AND T1.ID IS NOT NULL,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,SELECT name FROM Highschooler WHERE NOT EXISTS (SELECT name FROM Likes WHERE Likes.liked_id = Highschooler.ID),WRONG
network_1,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",SELECT count(*) FROM Likes WHERE student_id = ?,WRONG
network_1,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",SELECT COUNT (liked_id) FROM Likes WHERE student_id = ?,WRONG
network_1,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT name ,  COUNT (liked_id) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.friend_id GROUP BY name",WRONG
network_1,"SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","SELECT name ,  COUNT (liked_id) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.friend_id GROUP BY name",WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT name FROM Highschooler WHERE likes.liked_id  >  2 AND likes.student_id = Highschooler.ID,WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT name FROM Highschooler WHERE Likes.liked_id  >  2 AND Highschooler.ID = Likes.student_id,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,SELECT name FROM Highschooler WHERE grade > 5 AND likes.liked_id > 1 AND friend_id IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT liked_id FROM Likes)),WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,"SELECT name ,  grade FROM Highschooler WHERE Friend.liked_id in (SELECT Highschooler.ID FROM Likes  WHERE Highschooler.grade > 5  AND Highschooler.ID > 1)",WRONG
network_1,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT COUNT (DISTINCT liked_id) FROM Friend WHERE student_id = Highschooler.ID,WRONG
network_1,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",SELECT count(*) FROM Likes WHERE liked_id = 1 AND student_id = 1,WRONG
network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE exists (SELECT 1 FROM Friend WHERE Highschooler.ID = Friend.student_id),CORRECT
network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT avg(grade) FROM Highschooler WHERE exists (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID),CORRECT
network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min(grade) FROM Highschooler WHERE grade NOT IN (SELECT Friend.friend_id FROM Friend WHERE Friend.student_id = Highschooler.ID),WRONG
network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),SELECT min ( grade ) FROM Highschooler WHERE grade NOT IN (SELECT max ( grade ) FROM Highschooler WHERE student_id NOT IN (SELECT student_id FROM Friend),WRONG
dog_kennels,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs),WRONG
dog_kennels,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT state FROM Owners,WRONG
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Treatments)),CORRECT
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Dogs WHERE Treatments.dog_id IS NOT NULL,WRONG
dog_kennels,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT T1.professional_id,T1.last_name,T1.cell_phone FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.state  =  ""Indiana"" AND T2.treatment_type_code  =  ""2"" GROUP BY T1.professional_id  HAVING count(*)  > 2",WRONG
dog_kennels,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","SELECT      professionals.last_name,     professionals.cell_phone FROM     professionals     JOIN     dogs ON professionals.professional_id = dogs.professional_id     JOIN     treatments ON dogs.dog_id = treatments.dog_id     JOIN     owners ON dogs.owner_id = owners.owner_id     JOIN     breeds ON dogs.breed_code = breeds.breed_code     JOIN     sizes ON dogs.size_code = sizes.size_code     JOIN     treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code     JOIN     professionals ON professionals.professional_id = treatments.professional_id     WHERE     owners.state = 'Indiana'     OR     treatments.treatment_type_code = 'more than two'     GROUP BY     professionals.last_name, professionals.cell_phone",WRONG
dog_kennels,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE Treatments.cost_of_treatment < 1000,WRONG
dog_kennels,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),SELECT name FROM Dogs WHERE cost_of_treatment  <  1000 AND owner_id = Owners.owner_id,WRONG
dog_kennels,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Owners),WRONG
dog_kennels,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT DISTINCT first_name FROM Owners),WRONG
dog_kennels,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id,role_code,email_address FROM professionals EXCEPT SELECT treatment_type_code FROM treatments WHERE treatment_type_code IS NULL",WRONG
dog_kennels,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","SELECT professional_id,role_code,first_name,last_name,email_address FROM professionals EXCEPT SELECT professional_id,role_code,first_name,last_name,email_address FROM treatments WHERE professional_id IS NULL",WRONG
dog_kennels,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id,  first_name,  last_name FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY sum(Dogs.weight) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id,  first_name,  last_name FROM Owners ORDER BY count(DISTINCT Dogs.dog_id) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT professional_id,role_code,first_name FROM Professionals WHERE count(*)  >  2",WRONG
dog_kennels,"SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id,T1.role_code,T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.treatment_id  >  (SELECT min(treatment_id) FROM Treatments) GROUP BY T1.professional_id,T1.role_code,T1.first_name HAVING COUNT(*)  >  2",WRONG
dog_kennels,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM Breeds ORDER BY count(*) DESC LIMIT 1,WRONG
dog_kennels,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM Dogs GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1,WRONG
dog_kennels,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id,last_name FROM Owners  JOIN Treatments ON Owners.owner_id = Treatments.owner_id GROUP BY owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id,T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1",WRONG
dog_kennels,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM Treatments ORDER BY cost_of_treatment ASC LIMIT 1,WRONG
dog_kennels,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM Treatments ORDER BY cost_of_treatment ASC LIMIT 1,WRONG
dog_kennels,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T2.owner_id ORDER BY sum (T2.charge_amount) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT owner_id, zip_code FROM Owners ORDER BY sum(cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id ,  T1.cell_phone FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T2.professional_id HAVING count(*)  >= 2",WRONG
dog_kennels,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","SELECT T1.professional_id,T1.cell_phone FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.treatment_type_code  =  'two or more types of treatments' EXCEPT SELECT T1.professional_id,T1.cell_phone FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.treatment_type_code  =  'only one type of treatment'",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments) AND T2.professional_id = (SELECT professional_id FROM Professionals WHERE first_name = 'Average')",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)",WRONG
dog_kennels,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT date_of_treatment ,  first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.ID",WRONG
dog_kennels,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","SELECT date_of_treatment ,  professional_id ,  first_name FROM Treatments WHERE professional_id = (SELECT professional_id FROM Professionals WHERE first_name = 'John');",WRONG
dog_kennels,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT cost_of_treatment,  treatment_type_description FROM Treatments GROUP BY treatment_type_description",WRONG
dog_kennels,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","SELECT cost_of_treatment,  treatment_type_description FROM Treatments WHERE dog_id = 1;",WRONG
dog_kennels,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT first_name ,  last_name ,  size_description FROM Owners JOIN Sizes ON Owners.dog_id = Sizes.dog_id",WRONG
dog_kennels,"SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT first_name ,  last_name ,  size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",CORRECT
dog_kennels,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT first_name, name FROM Owners JOIN Dogs ON Owners.ID = Dogs.owner_id",WRONG
dog_kennels,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","SELECT first_name ,  name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",CORRECT
dog_kennels,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT name ,  date_of_treatment FROM Dogs WHERE breed_code = (SELECT breed_code FROM Breeds WHERE count(*) = (SELECT count(*) FROM Breeds))",WRONG
dog_kennels,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T2.breed_code  =  T3.breed_code WHERE T3.breed_code  =  (SELECT min(breed_code) FROM Breeds) order by T2.date_of_treatment asc limit 10",WRONG
dog_kennels,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT first_name ,  name FROM Owners WHERE state  =  'Virginia' JOIN Dogs ON Owners.owner_id = Dogs.owner_id",WRONG
dog_kennels,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","SELECT first_name, street FROM Owners WHERE state = 'Virginia'",WRONG
dog_kennels,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT date_arrived,  date_departed FROM Dogs WHERE treatment_type_code IS NOT NULL AND date_of_treatment IS NOT NULL",WRONG
dog_kennels,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","SELECT date_arrived,  date_departed FROM Dogs WHERE treatment_id IS NOT NULL",WRONG
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners ORDER BY Dogs.date_of_birth DESC LIMIT 1,WRONG
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Dogs WHERE date_of_birth  =  (SELECT min(date_of_birth) FROM Dogs),WRONG
dog_kennels,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',SELECT email_address FROM Professionals WHERE zip_code = 'HI' or zip_code = 'WI',WRONG
dog_kennels,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',SELECT T1.email_address FROM Professionals AS T1 WHERE T1.home_phone LIKE '%Hawaii%' OR T1.home_phone LIKE '%Wisconsin%' AND T1.state = 'Hawaii' OR T1.state = 'Wisconsin',WRONG
dog_kennels,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived,  date_departed FROM Dogs",CORRECT
dog_kennels,"SELECT date_arrived ,  date_departed FROM Dogs","SELECT date_arrived,  date_departed FROM Dogs",CORRECT
dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(*) FROM Dogs,CORRECT
dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT count(*) FROM Treatments WHERE Treatments.dog_id IS NOT NULL,CORRECT
dog_kennels,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(*) FROM Professionals,CORRECT
dog_kennels,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT count(*) FROM Professionals,CORRECT
dog_kennels,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT T1.role_code, T1.street, T1.city, T1.state FROM Professionals AS T1 JOIN city AS T2 ON T1.city  =  T2.city WHERE T2.city LIKE '%West%'",WRONG
dog_kennels,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","SELECT T1.role_code ,  T1.street,  T1.city,  T1.state FROM Professionals AS T1 JOIN Owners AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.city LIKE '%West%'",WRONG
dog_kennels,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT T1.first_name, T1.last_name, T1.email_address FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.state LIKE '%North%'",WRONG
dog_kennels,"SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","SELECT T1.first_name, T1.last_name, T1.email_address FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.state LIKE '%North%'",WRONG
dog_kennels,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs),CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),SELECT count ( dog_id ) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs),CORRECT
dog_kennels,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT max(cost_of_treatment) FROM Treatments WHERE date_of_treatment = (SELECT max(date_of_treatment) FROM Treatments),CORRECT
dog_kennels,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT max(cost_of_treatment) FROM Treatments WHERE date_of_treatment = (SELECT max(date_of_treatment) FROM Treatments),CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT count(*) FROM Dogs WHERE Treatments.treatment_id = 0,WRONG
dog_kennels,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),SELECT count(*) FROM Dogs WHERE size_code  =  'Small' AND breed_code  =  'Poodle' AND treatment_id  =  0 AND abandoned_yn  =  'N',WRONG
dog_kennels,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs),CORRECT
dog_kennels,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs),CORRECT
dog_kennels,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE Treatments.professional_id IS NULL,WRONG
dog_kennels,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM professionals WHERE professionals.professional_id NOT IN (SELECT professional_id FROM Treatments),CORRECT
dog_kennels,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name ,  age ,  weight ,  breed_code ,  size_code ,  owner_id ,  professional_id ,  treatment_type_code ,  treatment_id ,  date_of_birth ,  date_arrived ,  date_adopted ,  date_departed FROM Dogs WHERE abandoned_yn  =  1",WRONG
dog_kennels,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","SELECT name ,  age ,  weight ,  abandoned_yn FROM Dogs WHERE abandoned_yn = 1",WRONG
dog_kennels,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,CORRECT
dog_kennels,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,CORRECT
dog_kennels,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,CORRECT
dog_kennels,SELECT max(age) FROM Dogs,SELECT max(age) FROM Dogs,CORRECT
dog_kennels,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type,  charge_amount FROM Charges GROUP BY charge_type",CORRECT
dog_kennels,"SELECT charge_type ,  charge_amount FROM Charges","SELECT charge_type,  charge_amount FROM Charges",CORRECT
dog_kennels,SELECT max(charge_amount) FROM Charges,SELECT max(charge_amount) FROM Charges,CORRECT
dog_kennels,SELECT max(charge_amount) FROM Charges,SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1,CORRECT
dog_kennels,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address, cell_number, home_phone FROM Professionals",CORRECT
dog_kennels,"SELECT email_address ,  cell_number ,  home_phone FROM professionals","SELECT email_address,cell_number,home_phone FROM Professionals",CORRECT
dog_kennels,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT breed_code, size_code FROM Breeds",WRONG
dog_kennels,"SELECT DISTINCT breed_code ,  size_code FROM dogs","SELECT distinct breed_code, size_code FROM Breeds",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT  first_name ,  treatment_type_description FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","SELECT first_name,  treatment_type_description FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id",WRONG
singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC,WRONG
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC,WRONG
singer,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year,Citizenship FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song);",WRONG
singer,"SELECT Birth_Year ,  Citizenship FROM singer","SELECT Birth_Year, Citizenship FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song);",WRONG
singer,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT name FROM singer WHERE Citizenship != 'France',CORRECT
singer,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT name FROM singer WHERE citizenship != 'French',WRONG
singer,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT      singer.Name FROM     singer     JOIN     song ON singer.Singer_ID = song.Singer_ID WHERE     song.Sales > 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,WRONG
singer,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,SELECT name FROM singer WHERE Birth_Year BETWEEN 1948 AND 1949,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,CORRECT
singer,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","SELECT citizenship ,  count(*) FROM singer GROUP BY citizenship",CORRECT
singer,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",SELECT count(*) FROM singer WHERE Citizenship  =  'United States',WRONG
singer,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1,CORRECT
singer,select citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1,CORRECT
singer,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship",CORRECT
singer,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT max(Net_Worth_Millions) ,  citizenship FROM singer",WRONG
singer,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT title, name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",CORRECT
singer,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","SELECT title ,  name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",CORRECT
singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT DISTINCT name FROM singer WHERE Sales  >  300000 AND Citizenship = 'United States',WRONG
singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,SELECT Name FROM singer WHERE Sales  >  300000,WRONG
singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT name FROM singer WHERE song.Singer_ID  =  singer.Singer_ID GROUP BY name HAVING count(*)  >  1,WRONG
singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,SELECT name FROM singer WHERE song.Singer_ID  >  1,WRONG
singer,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","SELECT name ,  sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID",WRONG
singer,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",SELECT sum(Sales) FROM song WHERE Singer_ID  =  singer.Singer_ID GROUP BY singer.Name,WRONG
singer,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT name FROM singer WHERE song IS NULL,WRONG
singer,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT sname FROM singer WHERE song IS NULL,WRONG
singer,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT citizenship FROM singer WHERE Birth_Year  > 1945 AND Birth_Year  < 1955,WRONG
singer,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,SELECT citizenship FROM singer WHERE Birth_Year  > 1945 AND Birth_Year  < 1955 AND Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales  > 1000000 AND Highest_Position  > 10),WRONG
real_estate_properties,SELECT count(*) FROM Other_Available_Features,SELECT count(*) FROM Other_Available_Features,CORRECT
real_estate_properties,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'AirCon',WRONG
real_estate_properties,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,SELECT property_type_description FROM Properties WHERE property_type_code = '1',WRONG
real_estate_properties,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","SELECT property_name ,  property_type_code ,  room_count FROM Properties WHERE property_type_code  =  'houses' OR property_type_code  =  'apartments' AND room_count  >  1",WRONG
