DATABASE,GOLD SQL,PREDICTED SQL,DECISION
car_1,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","SELECT continents.Continent, COUNT(DISTINCT car_makers.Maker) FROM continents JOIN car_makers ON continents.ContId = car_makers.Continent JOIN countries ON car_makers.Country = countries.CountryId JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent",WRONG
student_transcripts_tracking,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT min(date_first_registered) FROM Students)",CORRECT
student_transcripts_tracking,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT transcript_id, course_id FROM transcript_contents  JOIN Student_Enrolment_Courses ON transcript_contents.student_course_id = Student_Enrolment_Courses.student_course_id  JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id  JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id  JOIN Departments ON Courses.department_id = Departments.department_id  JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id  JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id  JOIN Addresses ON Students.permanent_address_id = Addresses.address_id  JOIN Students ON Student_Enrolment.student_id = Students.student_id  WHERE COUNT(*) > 1  GROUP BY course_id",WRONG
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT Title FROM Cartoon WHERE Directed_by = 'Ben_Jones',WRONG
tvshow,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",SELECT COUNT (DISTINCT directed_by) FROM Cartoon GROUP BY directed_by,WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",SELECT Code FROM country WHERE NOT EXISTS (SELECT * FROM countrylanguage WHERE IsOfficial  =  1 AND country.Code  =  countrylanguage.CountryCode),WRONG
flight_2,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT DISTINCT AirportName FROM airports WHERE CountryAbbrev = 'Aberdeen',CORRECT
car_1,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,SELECT countries.CountryId FROM countries WHERE (SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN cars_data ON model_list.Model = cars_data.MakeId  WHERE cars_data.Country = countries.CountryId)  > 2 GROUP BY countries.CountryId,WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,SELECT COUNT(model_list.Model) FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN countries ON car_makers.Country = countries.CountryId  JOIN continents ON countries.Continent = continents.ContId  WHERE car_makers.Maker = 'American Motor Company' GROUP BY model_list.Model,WRONG
world_1,"SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","SELECT name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT min(Population) FROM country WHERE Population IN (SELECT Population FROM country))",WRONG
voter_1,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',"SELECT count(*) FROM VOTES  JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number  JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state  WHERE AREA_CODE_STATE.state IN ('NY', 'CA')",WRONG
car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT DISTINCT T1.Maker FROM car_makers AS T1 WHERE EXISTS (SELECT * FROM cars_data AS T2 WHERE T2.Year = 1970 AND T2.MakeId = T1.Id),WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",SELECT DISTINCT T1.Airline FROM flights AS T1  JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode  WHERE T2.CountryAbbrev = 'CVO' AND NOT EXISTS (SELECT * FROM flights AS T3  JOIN airports AS T4 ON T3.DestAirport = T4.AirportCode  WHERE T4.CountryAbbrev = 'APG'),CORRECT
concert_singer,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID GROUP BY T1.concert_ID ORDER BY T1.Year DESC;",WRONG
dog_kennels,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT tt.treatment_type_description  FROM treatments t  JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code  WHERE t.cost_of_treatment = (SELECT min(t2.cost_of_treatment)                           FROM treatments t2                           JOIN dogs d ON t2.dog_id = d.dog_id                           JOIN owners o ON d.owner_id = o.owner_id                           JOIN professionals p ON t2.professional_id = p.professional_id                           JOIN treatment_types tt2 ON t2.treatment_type_code = tt2.treatment_type_code                           WHERE d.abandoned_yn = 'N' AND o.email_address IS NOT NULL                           GROUP BY t2.treatment_type_code),WRONG
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT line_1) FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students);,WRONG
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player WHERE Height = (SELECT max(Height) FROM people WHERE People_ID = (SELECT People_ID FROM poker_player WHERE Final_Table_Made = 1),WRONG
wta_1,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","SELECT year, COUNT(*) FROM (SELECT DISTINCT year, match_num FROM matches WHERE winner_id IN (SELECT player_id FROM players) AND loser_id IN (SELECT player_id FROM players)) GROUP BY year",CORRECT
orchestra,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE EXISTS (SELECT 1 FROM performance AS T2 WHERE T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(*) > 1),WRONG
wta_1,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,"SELECT count(*) FROM matches WHERE year IN (2013, 2016)",CORRECT
